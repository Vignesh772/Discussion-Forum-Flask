,Question,Answer
639,Which top-level domains does Amazon Route 53 register through Amazon Registrar and which ones does it register through Gandi?,"See our 
documentation
 for a list of the domains that you can currently register using Amazon Route 53. This list includes information about which registrar is the current registrar of record for each TLD that we sell."
640,Can I transfer my .com and .net domain registrations from Gandi to Amazon?,No. We plan to add this functionality soon.
641,What is Whois? Why is my information shown in Whois?,"Whois is a publicly available database for domain names that lists the contact information and the name servers that are associated with a domain name. Anyone can access the Whois database by using the WHOIS command, which is widely available. It's included in many operating systems, and it's also available as a web application on many websites. The Internet Corporation for Assigned Names and Numbers (ICANN) requires that all domain names have publicly available contact information in case someone needs to get in contact with the domain name holder."
642,How do I transfer my domain name to Route 53?,"To get started, log into your account and click on “Domains”. Then, click the “Transfer Domain” button at the top of the screen and complete the transfer process. Please make sure before you start the transfer process, (1) your domain name is unlocked at your current registrar, (2) you have disabled privacy protection on your domain name (if applicable), and (3) that you have obtained the valid Authorization Code, or “authcode”, from your current registrar which you will need to enter as part of the transfer process."
643,How do I transfer my existing domain name registration to Amazon Route 53 without disrupting my existing web traffic?,"First, you need to get a list of the DNS record data for your domain name, generally available in the form of a “zone file” that you can get from your existing DNS provider. With the DNS record data in hand, you can use Route 53’s Management Console or simple web-services interface to create a hosted zone that can store the DNS records for your domain name and follow its transfer process, which will include such steps as updating the name servers for your domain name to the ones associated with your hosted zone. To complete the domain name transfer process, contact the registrar with whom you registered your domain name and follow its transfer process, which will include steps such as updating the name servers for your domain name to the ones associated with your hosted zone. As soon as your registrar propagates the new name server delegations, the DNS queries from your end users will start to get answered by the Route 53 DNS servers."
644,How do I check on the status of my transfer request?,You can view the status of domain name transfers in the “Alerts” section on the homepage of the Route 53 console.
645,What do I do if my transfer wasn’t successful?,"You will need to contact your current registrar in order to determine why your transfer failed. Once they have resolved the issue, you can resubmit your transfer request."
646,How do I transfer my domain name to a different registrar?,"In order to move your domain name away from Route 53, you need to initiate a transfer request with your new registrar. They will request the domain name be moved to their management."
647,Is there a limit to the number of domains I can manage using Amazon Route 53?,"Each new Amazon Route 53 account is limited to a maximum of 50 domains. Complete our 
request form for a higher limit
 and we will respond to your request within two business days."
648,Does Amazon Route 53 DNS support DNSSEC?,"Amazon Route 53’s DNS services does NOT support DNSSEC at this time. However, our domain name registration service supports configuration of signed DNSSEC keys for domains when DNS service is configured at another provider. More information on configuring DNSSEC for your domain name registration can be found 
here
."
649,Hello,Hello
650,How are you?,I’m fine thanks.
651,Good morning,"Hello, good morning."
652,Bye,"Bye, glad to have helped."
653,Explain what is Flask & its benefits?,"Flask is a web micro framework for Python based on ""Werkzeug, Jinja 2 and good intentions"" BSD licensed. Werkzeug and jingja are two of its dependencies.
Flask is part of the micro-framework. Which means it will have little to no dependencies on external libraries. It makes the framework light while there is little dependency to update and less security bugs. "
654,"Mention what is the difference between Django, Pyramid, and Flask?","Flask is a ""microframework"" primarily build for a small application with simpler requirements. In flask, you have to use external libraries. Flask is ready to use.
Pyramid are build for larger applications. It provides flexibility and lets the developer use the right tools for their project. The developer can choose the database, URL structure, templating style and more. Pyramid is heavy configurable.
Like Pyramid, Django can also used for larger applications. It includes an ORM. "
655,Mention what is Flask-WTF and what are their features?,"Flask-WTF offers simple integration with WTForms. Features include for Flask WTF are
   Integration with wtforms
    Secure form with csrf token
    Global csrf protection
    Internationalization integration
    Recaptcha supporting
    File upload that works with Flask Uploads"
656, Explain what is the common way for the Flask script to work?,"The common way for the flask script to work is
   Either it should be the import path for your application
    Or the path to a Python file"
657,is Flask an MVC model and if yes give an example showing MVC pattern for your application?,"Basically, Flask is a minimalistic framework which behaves same as MVC framework. So MVC is a perfect fit for Flask, and the pattern for MVC we will consider for the following example "
658,What is Python? What are the benefits of using Python?,"Python is a programming language with objects, modules, threads, exceptions and automatic memory management. The benefits of pythons are that it is simple and easy, portable, extensible, build-in data structure and it is an open source."
659,What is PEP 8?,"PEP 8 is a coding convention, a set of recommendation, about how to write your Python code more readable."
660,What is pickling and unpickling?,"Pickle module accepts any Python object and converts it into a string representation and dumps it into a file by using dump function, this process is called pickling. While the process of retrieving original Python objects from the stored string representation is called unpickling."
661,How Python is interpreted?,"ython language is an interpreted language. Python program runs directly from the source code. It converts the source code that is written by the programmer into an intermediate language, which is again translated into machine language that has to be executed."
662,How memory is managed in Python?,"    Python memory is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have an access to this private heap and interpreter takes care of this Python private heap.
    The allocation of Python heap space for Python objects is done by Python memory manager. The core API gives access to some tools for the programmer to code.
    Python also have an inbuilt garbage collector, which recycle all the unused memory and frees the memory and makes it available to the heap space."
663,What are the tools that help to find bugs or perform static analysis?,PyChecker is a static analysis tool that detects the bugs in Python source code and warns about the style and complexity of the bug. Pylint is another tool that verifies whether the module meets the coding standard
664,What are Python decorators?,A Python decorator is a specific change that we make in Python syntax to alter functions easily.
665,What is the difference between list and tuple?,The difference between list and tuple is that list is mutable while tuple is not. Tuple can be hashed for e.g as a key for dictionaries.
666,How are arguments passed by value or by reference?,"Everything in Python is an object and all variables hold references to the objects. The references values are according to the functions; as a result you cannot change the value of the references. However, you can change the objects if it is mutable."
667,What is Dict and List comprehensions are?,They are syntax constructions to ease the creation of a Dictionary or List based on existing iterable.
668,What are the built-in type does python provides?,"There are mutable and Immutable types of Pythons built in types Mutable built-in types
    List Sets   Dictionaries Immutable built-in types Strings ,Tuples  ,Numbers"
669,What is namespace in Python?,"In Python, every name introduced has a place where it lives and can be hooked for. This is known as namespace. It is like a box where a variable name is mapped to the object placed. Whenever the variable is searched out, this box will be searched, to get corresponding object."
670,What is lambda in Python?,It is a single expression anonymous function often used as inline function.
671,Why lambda forms in python does not have statements?,A lambda form in python does not have statements as it is used to make new function object and then return them at runtime.
672,What is pass in Python?,"Pass means, no-operation Python statement, or in other words it is a place holder in compound statement, where there should be a blank left and nothing has to be written there."
673,n Python what are iterators?,"In Python, iterators are used to iterate a group of elements, containers like list."
674,What is unittest in Python?,"A unit testing framework in Python is known as unittest. It supports sharing of setups, automation testing, shutdown code for tests, aggregation of tests into collections etc."
675,In Python what is slicing?,"A mechanism to select a range of items from sequence types like list, tuple, strings etc. is known as slicing."
676,What are generators in Python?,The way of implementing iterators are known as generators. It is a normal function except that it yields expression in the function.
677,What is docstring in Python?,"A Python documentation string is known as docstring, it is a way of documenting Python functions, modules and classes."
678,How can you copy an object in Python?,"To copy an object in Python, you can try copy.copy () or copy.deepcopy() for the general case. You cannot copy all objects but most of them."
679,What is negative index in Python?,"Python sequences can be index in positive and negative numbers. For positive index, 0 is the first index, 1 is the second index and so forth. For negative index, (-1) is the last index and (-2) is the second last index and so forth."
680,How you can convert a number to a string?,"In order to convert a number into a string, use the inbuilt function str(). If you want a octal or hexadecimal representation, use the inbuilt function oct() or hex()."
681,What is the difference between Xrange and range?,"Xrange returns the xrange object while range returns the list, and uses the same memory and no matter what the range size is."
682,What is module and package in Python?,"In Python, module is the way to structure program. Each Python program file is a module, which imports other modules like objects and attributes.
The folder of Python program is a package of modules. A package can have modules or subfolders. "
683,Mention what are the rules for local and global variables in Python?,"Local variables: If a variable is assigned a new value anywhere within the function's body, it's assumed to be local.
Global variables: Those variables that are only referenced inside a function are implicitly global. "
684,How can you share global variables across modules?,"To share global variables across modules within a single program, create a special module. Import the config module in all modules of your application. The module will be available as a global variable across modules. "
685,Explain how can you make a Python Script executable on Unix?,"To make a Python Script executable on Unix, you need to do two things,
    Script file's mode must be executable and
    the first line must begin with # ( #!/usr/local/bin/python)"
686,Explain how to delete a file in Python?,By using a command os.remove (filename) or os.unlink(filename) 
687,By using a command os.remove (filename) or os.unlink(filename),"To generate random numbers in Python, you need to import command as
import random ,random.random() ,This returns a random floating point number in the range [0,1) "
688,Explain how can you access a module written in Python from C?,"You can access a module written in Python from C by following method,
Module = =PyImport_ImportModule(""<modulename>""); "
689,Mention the use of // operator in Python?,"It is a Floor Divisionoperator , which is used for dividing two operands with the result as quotient showing only digits before the decimal point. For instance, 10//5 = 2 and 10.0//5.0 = 2.0. "
690,What is the purpose of PYTHONCASEOK environment variable?,PYTHONCASEOK ? It is used in Windows to instruct Python to find the first case-insensitive match in an import statement. Set this variable to any value to activate it.
691,What is the purpose of PYTHONHOME environment variable?,PYTHONHOME ? It is an alternative module search path. It is usually embedded in the PYTHONSTARTUP or PYTHONPATH directories to make switching module libraries easy.
692,What is the output of print str if str = 'Hello World!'?,It will print complete string. Output would be Hello World!.
693,What is the output of print str[2:5] if str = 'Hello World!'?,It will print characters starting from 3rd to 5th. Output would be llo.
694,What is the output of print str[2:] if str = 'Hello World!'?,It will print characters starting from 3rd character. Output would be llo World!.
695,How will you get all the keys from the dictionary?,"Using dictionary.keys() function, we can get all the keys from the dictionary object.print dict.keys()"
696,ow will you convert a string to an int in python?,"int(x [,base]) - Converts x to an integer. base specifies the base if x is a string"
697,How will you convert a string to a long in python?,"long(x [,base] ) - Converts x to a long integer. base specifies the base if x is a string."
698,How will you convert a object to a string in python?,str(x) ? Converts object x to a string representation.
699,How will you convert a object to a regular expression in python?,repr(x) ? Converts object x to an expression string.
700,What is the purpose of ** operator?,** Exponent ? Performs exponential (power) calculation on operators. a**b = 10 to the power 20 if a = 10 and b = 20.
701,What is the purpose of // operator?,// Floor Division ? The division of operands where the result is the quotient in which the digits after the decimal point are removed.
702,What is the purpose of is operator?,"is ? Evaluates to true if the variables on either side of the operator point to the same object and false otherwise. x is y, here is results in 1 if id(x) equals id(y)."
703,How can you get a random number in python?,"random() ? returns a random float r, such that 0 is less than or equal to r and r is less than 1."
704,How can you pick a random item from a range?,"randrange ([start,] stop [,step]) ? returns a randomly selected element from range(start, stop, step)."
705,How will you set the starting value in generating random numbers?,seed([x]) ? Sets the integer starting value used in generating random numbers. Call this function before calling any other random module function. Returns None.
706,How will you randomizes the items of a list in place?,shuffle(lst) ? Randomizes the items of a list in place. Returns None.
707,How will you capitalizes first letter of string?,capitalize() ? Capitalizes first letter of string
708,How will you check in a string that all characters are alphanumeric?,isalnum() ? Returns true if string has at least 1 character and all characters are alphanumeric and false otherwise.
709,How will you check in a string that all characters are in lowercase?,islower() ? Returns true if string has at least 1 cased character and all cased characters are in lowercase and false otherwise
710,How will you check in a string that all characters are numerics?,isnumeric() ? Returns true if a unicode string contains only numeric characters and false otherwise
711,How will you check in a string that all characters are whitespaces?,isspace() ? Returns true if string contains only whitespace characters and false otherwise.
712,How will you check in a string that it is properly titlecased?,"istitle() ? Returns true if string is properly ""titlecased"" and false otherwise."
713,How will you check in a string that all characters are in uppercase?,isupper() ? Returns true if string has at least one cased character and all cased characters are in uppercase and false otherwise
714,How will you merge elements in a sequence?,"join(seq) ? Merges (concatenates) the string representations of elements in sequence seq into a string, with separator string."
715,How will you get the length of the string?,len(string) ? Returns the length of the string
716,How will you get a space-padded string with the original string left-justified to a total of width columns?,"ljust(width[, fillchar]) ? Returns a space-padded string with the original string left-justified to a total of width columns"
717,How will you convert a string to all lowercase?,lower() ? Converts all uppercase letters in string to lowercase.
718,How will you remove all leading whitespace in string?,lstrip() ? Removes all leading whitespace in string.
719,How will you get the max alphabetical character from the string?,max(str) ? Returns the max alphabetical character from the string str.
720,How will you get the min alphabetical character from the string?,min(str) ? Returns the min alphabetical character from the string str.
721,How will you replaces all occurrences of old substring in string with new string?,"replace(old, new [, max]) ? Replaces all occurrences of old in string with new or at most max occurrences if max given."
722,How will you remove all leading and trailing whitespace in string?,strip([chars]) ? Performs both lstrip() and rstrip() on string.
723,How will you change case for all letters in string?,swapcase() ? Inverts case for all letters in string.
724,How will you get titlecased version of string?,"title() ? Returns ""titlecased"" version of string, that is, all words begin with uppercase and the rest are lowercase"
725,How will you convert a string to all uppercase?,upper() ? Converts all lowercase letters in string to uppercase.
726,How will you check in a string that all characters are decimal?,isdecimal() ? Returns true if a unicode string contains only decimal characters and false otherwise.
727,What is the difference between del() and remove() methods of list?,"o remove a list element, you can use either the del statement if you know exactly which element(s) you are deleting or the remove() method if you do not know."
728,"What is the output of len([1, 2, 3])?",3
729,What is the output of ['Hi!'] * 4?,"['Hi!', 'Hi!', 'Hi!', 'Hi!']"
730,"What is the output of 3 in [1, 2, 3]?",TRUE
731,"What is the output of L[2] if L = [1,2,3]?","3, Offsets start at zero."
732,"What is the output of L[-2] if L = [1,2,3]?","1, Negative: count from the right."
733,"What is the output of L[1:] if L = [1,2,3]?","2, 3, Slicing fetches sections."
734,How will you compare two lists?,"cmp(list1, list2) ? Compares elements of both lists."
735,How will you get the length of a list?,len(list) ? Gives the total length of the list.
736,How will you get the max valued item of a list?,max(list) ? Returns item from the list with max value.
737,How will you get the min valued item of a list?,min(list) ? Returns item from the list with min value.
738,How will you get the index of an object in a list?,list.index(obj) ? Returns the lowest index in list that obj appears.
739,How will you insert an object at given index in a list?,"list.insert(index, obj) ? Inserts object obj into list at offset index."
740,How will you remove last object from a list?,list.pop(obj=list[-1]) ? Removes and returns last object or obj from list.
741,How will you remove an object from a list?,list.remove(obj) ? Removes object obj from list.
742,How will you reverse a list?,list.reverse() ? Reverses objects of list in place.
743,How will you sort a list?,"list.sort([func]) ? Sorts objects of list, use compare func if given."
744,What we call a function which is incomplete version of a function?,Stub.
745,When a function is defined then the system stores parameters and local variables in an area of memory. What this memory is known as?,Stack.
746,s Python platform independent?,"

No
There are some modules and functions in python that can only run on certain platforms.
"
747,o you think Python has a complier?,"

YYes it has a complier which works automatically so we dont notice the compiler of python.
"
748,Is String in Python are immutable? (Yes/No),Yes.
749,Can True = False be possible in Python?,No.
750,Which module of python is used to apply the methods related to OS.?,OS.
751,When does a new block begin in python?,A block begins when the line is intended by 4 spaces
752,Name the python Library used for Machine learning.,Scikit-learn python Library used for Machine learning
753,What does pass operation do?,Pass indicates that nothing is to be done i.e. it signifies a no operation.
754,Name the tools which python uses to find bugs (if any).,Pylint and pychecker.
755,How do you construct an increment statement or decrement statement in C?,"There are actually two ways you can do this. One is to use the increment operator ++ and decrement operator . For example, the statement x++ means to increment the value of x by 1. Likewise, the statement x  means to decrement the value of x by 1. Another way of writing increment statements is to use the conventional + plus sign or  minus sign. In the case of x++, another way to write it is x = x +1."
756,What is the difference between Call by Value and Call by Reference?,"When using Call by Value, you are sending the value of a variable as parameter to a function, whereas Call by Reference sends the address of the variable. Also, under Call by Value, the value in the parameter is not affected by whatever operation that takes place, while in the case of Call by Reference, values can be affected by the process within the function."
757,Some coders debug their programs by placing comment symbols on some codes instead of deleting it. How does this aid in debugging?,"Placing comment symbols /* */ around a code, also referred to as commenting out, is a way of isolating some codes that you think maybe causing errors in the program, without deleting the code. The idea is that if the code is in fact correct, you simply remove the comment symbols and continue on. It also saves you time and effort on having to retype the codes if you have deleted it in the first place."
758,What is a stack?,"A stack is one form of a data structure. Data is stored in stacks using the FILO (First In Last Out) approach. At any particular instance, only the top of the stack is accessible, which means that in order to retrieve data that is stored inside the stack, those on the upper part should be extracted first. Storing data in a stack is also referred to as a PUSH, while data retrieval is referred to as a POP."
759,What is a sequential access file?,"When writing programs that will store and retrieve data in a file, it is possible to designate that file into different forms. A sequential access file is such that data are saved in sequential order: one data is placed into the file after another. To access a particular data within the sequential access file, data has to be read one data at a time, until the right one is reached."
760,What is variable initialization and why is it important?,"This refers to the process wherein a variable is assigned an initial value before it is used in the program. Without initialization, a variable would have an unknown value, which can lead to unpredictable outputs when used in computations or other operations."
761,What is spaghetti programming?,"Spaghetti programming refers to codes that tend to get tangled and overlapped throughout the program. This unstructured approach to coding is usually attributed to lack of experience on the part of the programmer. Spaghetti programing makes a program complex and analyzing the codes difficult, and so must be avoided as much as possible."
762,Differentiate Source Codes from Object Codes,"Source codes are codes that were written by the programmer. It is made up of the commands and other English-like keywords that are supposed to instruct the computer what to do. However, computers would not be able to understand source codes. Therefore, source codes are compiled using a compiler. The resulting outputs are object codes, which are in a format that can be understood by the computer processor. In C programming, source codes are saved with the file extension .C, while object codes are saved with the file extension .OBJ"
763,"In C programming, how do you insert quote characters ( and ) into the output screen?","This is a common problem for beginners because quotes are normally part of a printf statement. To insert the quote character as part of the output, use the format specifiers \ (for single quote), and \ (for double quote)."
764,What is the use of a \0 character?,"It is referred to as a terminating null character, and is used primarily to show the end of a string value."
765,What is the difference between the = symbol and == symbol?,"The = symbol is often used in mathematical operations. It is used to assign a value to a given variable. On the other hand, the == symbol, also known as equal to or equivalent to, is a relational operator that is used to compare two values."
766,What is the modulus operator?,"The modulus operator outputs the remainder of a division. It makes use of the percentage (%) symbol. For example: 10 % 3 = 1, meaning when you divide 10 by 3, the remainder is 1."
767,What is a nested loop?,"A nested loop is a loop that runs within another loop. Put it in another sense, you have an inner loop that is inside an outer loop. In this scenario, the inner loop is performed a number of times as specified by the outer loop. For each turn on the outer loop, the inner loop is first performed."
768,"Which of the following operators is incorrect and why? ( >=, <=, <>, ==)","<> is incorrect. While this operator is correctly interpreted as not  equal to in writing conditional statements, it is not the proper operator to be used in C programming. Instead, the operator  !=  must be used to indicate not equal to condition."
769,Compare and contrast compilers from interpreters.,"Compilers and interpreters often deal with how program codes are executed. Interpreters execute program codes one line at a time, while compilers take the program as a whole and convert it into object code, before executing it. The key difference here is that in the case of interpreters, a program may encounter syntax errors in the middle of execution, and will stop from there. On the other hand, compilers check the syntax of the entire program and will only proceed to execution when no syntax errors are found."
770,How do you declare a variable that will hold string values? ,"The char keyword can only hold 1 character value at a time. By creating an array of characters, you can store string values in it. Example: char MyName[50];  declares a string variable named MyName that can hold a maximum of 50 characters."
771,Can the curly brackets { } be used to enclose a single line of code?,"While curly brackets are mainly used to group several lines of codes, it will still work without error if you used it for a single line. Some programmers prefer this method as a way of organizing codes to make it look clearer, especially in conditional statements. "
772,What are header files and what are its uses in C programming?,"Header files are also known as library files. They contain two essential things: the definitions and prototypes of functions being used in a program. Simply put, commands that you use in C programming are actually functions that are defined from within each header files. Each header file contains a set of functions. For example: stdio.h is a header file that contains definition and prototypes of commands like printf and scanf. "
773,What is syntax error?,"Syntax errors are associated with mistakes in the use of a programming language. It maybe a command that was misspelled or a command that must was entered in lowercase mode but was instead entered with an upper case character. A misplaced symbol, or lack of symbol, somewhere within a line of code can also lead to syntax error."
774,What are variables and it what way is it different from constants?,"Variables and constants may at first look similar in a sense that both are identifiers made up of one character or more characters (letters, numbers and a few allowable symbols). Both will also hold a particular value.  Values held by a variable can be altered throughout the program, and can be used in most operations and computations. Constants are given values at one time only, placed at the beginning of a program. This value is not altered in the program. For example, you can assigned a constant named PI and give it a value 3.1415  .  You can then use it as PI in the program, instead of having to write 3.1415 each time you need it. "
775,How do you access the values within an array?,"Arrays contain a number of elements, depending on the size you gave it during variable declaration. Each element is assigned a number from 0 to number of elements-1. To assign or retrieve the value of a particular element, refer to the element number. For example: if you have a declaration that says intscores[5];, then you have 5 accessible elements, namely: scores[0], scores[1], scores[2], scores[3] and scores[4]"
776,Can I use  int data type to store the value 32768? Why?,"No. int data type is capable of storing values from -32768 to 32767. To store 32768, you can use long int instead. You can also use unsigned int, assuming you dont intend to store negative values."
777,Can two or more operators such as \n and \t be combined in a single line of program code?,"Yes, its perfectly valid to combine operators, especially if the need arises. For example: you can have a code like  printf (Hello\n\n\World\')  to output the text Hello on the first line and World enclosed in single quotes to appear on the next two lines. "
778,Why is it that not all header files are declared in every C program?,"The choice of declaring a header file at the top of each C program would depend on what commands/functions you will be using in that program. Since each header file contains different function definitions and prototype, you would be using only those header files that would contain the functions you will need. Declaring all header files in every program would only increase the overall file size and load of the program, and is not considered a good programming style."
779,When is the void keyword used in a function?,"When declaring functions, you will decide whether that function would be returning a value or not. If that function will not return a value, such as when the purpose of a function is to display some outputs on the screen, then void is to be placed at the leftmost part of the function header. When a return value is expected after the function execution, the data type of the return value is placed instead of void."
780,What are compound statements?,Compound statements are made up of two or more program statements that are executed together. This usually occurs while handling conditions wherein a series of statements are executed when a TRUE or FALSE is evaluated. Compound statements can also be executed within a loop. Curly brackets { } are placed before and after compound statements.
781,What is the significance of an algorithm to C programming?,"Before a program can be written, an algorithm has to be created first. An algorithm provides a step by step procedure on how a solution can be derived. It also acts as a blueprint on how a program will start and end, including what process and computations are involved."
782,What is the advantage of an array over individual variables?,"When storing multiple related data, it is a good idea to use arrays. This is because arrays are named using only 1 word followed by an element number. For example: to store the 10 test results of 1 student, one can use 10 different variable names (grade1, grade2, grade3 grade10). With arrays, only 1 name is used, the rest are accessible through the index name (grade[0], grade[1], grade[2] grade[9])."
783,"What is wrong in this statement?  scanf(%d,whatnumber)","An ampersand & symbol must be placed before the variable name whatnumber. Placing & means whatever integer value is entered by the user is stored at the address of the variable name. This is a common mistake for programmers, often leading to logical errors."
784,How do you generate random numbers in C?,"Random numbers are generated in C using the rand() command. For example: anyNum = rand() will generate any integer number beginning from 0, assuming that anyNum is a variable of type integer."
785,What could possibly be the problem if a valid function name such as tolower() is being reported by the C compiler as undefined?,"The most probable reason behind this error is that the header file for that function was not indicated at the top of the program. Header files contain the definition and prototype for functions and commands used in a C program. In the case of tolower(), the code #include <ctype.h> must be present at the beginning of the program."
786,What are comments and how do you insert it in a C program?,"Comments are a great way to put some remarks or description in a program. It can serves as a reminder on what the program is all about, or a description on why a certain code or function was placed there in the first place. Comments begin with /* and ended by */ characters. Comments can be a single line, or can even span several lines. It can be placed anywhere in the program."
787,What is debugging?,"Debugging is the process of identifying errors within a program. During program compilation, errors that are found will stop the program from executing completely. At this state, the programmer would look into the possible portions where the error occurred. Debugging ensures the removal of errors, and plays an important role in ensuring that the expected program output is met."
788,What does the && operator do in a program code?,"The && is also referred to as AND operator. When using this operator, all conditions specified must be TRUE before the next action can be performed. If you have 10 conditions and all but 1 fails to evaluate as TRUE, the entire condition statement is already evaluated as FALSE."
789,"In C programming, what command or code can be used to determine if a number of odd or even?","There is no single command or function in C that can check if a number is odd or even. However, this can be accomplished by dividing that number by 2, then checking the remainder. If the remainder is 0, then that number is even, otherwise, it is odd. You can write it in code as:"
790,What does the format %10.2 mean when included in a printf statement?,"This format is used for two things: to set the number of spaces allotted for the output number and to set the number of decimal places. The number before the decimal point is for the allotted space, in this case it would allot 10 spaces for the output number. If the number of space occupied by the output number is less than 10, addition space characters will be inserted before the actual output number. The number after the decimal point sets the number of decimal places, in this case, its 2 decimal spaces. "
791,What are logical errors and how does it differ from syntax errors?,"Program that contains logical errors tend to pass the compilation process, but the resulting output may not be the expected one. This happens when a wrong formula was inserted into the code, or a wrong sequence of commands was performed. Syntax errors, on the other hand, deal with incorrect commands that are misspelled or not recognized by the compiler."
792,What are the different types of control structures in programming?,What are the different types of control structures in programming?
793,What is || operator and how does it function in a program?,"The || is also known as the OR operator in C programming. When using || to evaluate logical conditions, any condition that evaluates to TRUE will render the entire condition statement as TRUE."
794,Can the if function be used in comparing strings?,"No. if command can only be used to compare numerical values and single character values. For comparing string values, there is another function called strcmp that deals specifically with strings."
795,What are preprocessor directives?,"Preprocessor directives are placed at the beginning of every C program. This is where library files are specified, which would depend on what functions are to be used in the program. Another use of preprocessor directives is the declaration of constants.Preprocessor directives begin with the # symbol."
796,"What will be the outcome of the following conditional statement if the value of variable s is 10?
s >=10 && s < 25 && s!=12","The outcome will be TRUE. Since the value of s is 10, s >= 10 evaluates to TRUE because s is not greater than 10 but is still equal to 10. s< 25 is also TRUE since 10 is less then 25. Just the same, s!=12, which means s is not equal to 12, evaluates to TRUE. The && is the AND operator, and follows the rule that if all individual conditions are TRUE, the entire statement is TRUE."
797,Describe the order of precedence with regards to operators in C.,"Order of precedence determines which operation must first take place in an operation statement or conditional statement. On the top most level of precedence are the unary operators !, +,  and &. It is followed by the regular mathematical operators (*, / and modulus % first, followed by + and -). Next in line are the relational operators <, <=, >= and >. This is then followed by the two equality operators == and !=. The logical operators && and || are next evaluated. On the last level is the assignment operator =."
798,What is wrong with this statement? myName = Robin;,"You cannot use the = sign to assign values to a string variable. Instead, use the strcpy function. The correct statement would be: strcpy(myName, Robin);"
799,How do you determine the length of a string value that was stored in a variable?,"To get the length of a string value, use the function strlen(). For example, if you have a variable named FullName, you can get the length of the stored string value by using this statement: I = strlen(FullName); the variable I will now have the character length of the string value."
800,Is it possible to initialize a variable at the time it was declared?,"Yes, you dont have to write a separate assignment statement after the variable declaration, unless you plan to change it later on.  For example: char planet[15] = Earth; does two things: it declares a string variable named planet, then initializes it with the value Earth."
801,Why is C language being considered a middle level language?,"This is because C language is rich in features that make it behave like a high level language while at the same time can interact with hardware using low level methods. The use of a well structured approach to programming, coupled with English-like words used in functions, makes it act as a high level language. On the other hand, C can directly access memory structures similar to assembly language routines. "
802,What are the different file extensions involved when programming in C?,"Source codes in C are saved with .C file extension. Header files or library files have the .H file extension. Every time a program source code is successfully compiled, it creates an .OBJ object file, and an executable .EXE file. "
803,What are reserved words?,"Reserved words are words that are part of the standard C language library. This means that reserved words have special meaning and therefore cannot be used for purposes other than what it is originally intended for. Examples of reserved words are int, void, and return."
804,What are linked list?,"A linked list is composed of nodes that are connected with another. In C programming, linked lists are created using pointers. Using linked lists is one efficient way of utilizing memory for storage."
805,What is FIFO?,"In C programming, there is a data structure known as queue. In this structure, data is stored and accessed using FIFO format, or First-In-First-Out. A queue represents a line wherein the first data that was stored will be the first one that is accessible as well."
806,What are binary trees?,"Binary trees are actually an extension of the concept of linked lists. A binary tree has two pointers, a left one and a right one. Each side can further branch to form additional nodes, which each node having two pointers as well."
807,Not all reserved words are written in lowercase. TRUE or FALSE?,FALSE. All reserved words must be written in lowercase; otherwise the C compiler would interpret this as unidentified and invalid.
808,What is the difference between the expression ++a  and a++?,"In the first expression, the increment would happen first on variable a, and the resulting value will be the one to be used. This is also known as a prefix increment. In the second expression, the current value of variable a would the one to be used in an operation, before the value of a itself is incremented. This is also known as postfix increment."
809,What would happen to X in this expression: X += 15;  (assuming the value of X is 5),"X +=15 is a short method of writing X = X + 15, so if the initial value of X is 5, then 5 + 15 = 20."
810,"In C language, the variables NAME, name, and Name are all the same. TRUE or FALSE?","FALSE. C language is a case sensitive language. Therefore, NAME, name and Name are three uniquely different variables"
811,What is an endless loop?,"An endless loop can mean two things. One is that it was designed to loop continuously until the condition within the loop is met, after which a break function would cause the program to step out of the loop. Another idea of an endless loop is when an incorrect loop condition was written, causing the loop to run erroneously forever. Endless loops are oftentimes referred to as infinite loops."
812,What is a program flowchart and how does it help in writing a program?,"A flowchart provides a visual representation of the step by step procedure towards solving a given problem. Flowcharts are made of symbols, with each symbol in the form of different shapes. Each shape may represent a particular entity within the entire program structure, such as a process, a condition, or even an input/output phase."
813,What is wrong with this program statement? void = 10;,The word void is a reserved word in C language. You cannot use reserved words as a user-defined variable
814,Is this program statement valid? INT = 10.50;,"Assuming that INT is a variable of type float, this statement is valid. One may think that INT is a reserved word and must not be used for other purposes. However, recall that reserved words are express in lowercase, so the C compiler will not interpret this as a reserved word."
815,What are actual arguments?,"When you create and use functions that need to perform an action on some given values, you need to pass these given values to that function. The values that are being passed into the called function are referred to as actual arguments. "
816,What is a newline escape sequence?,"A newline escape sequence is represented by the \n character. This is used to insert a new line when displaying data in the output screen. More spaces can be added by inserting more \n characters. For example, \n\n would insert two spaces. A newline escape sequence can be placed before the actual output expression or after. "
817,What is output redirection?,"It is the process of transferring data to an alternative output source other than the display screen. Output redirection allows a program to have its output saved to a file. For example, if you have a program named COMPUTE, typing this on the command line as COMPUTE >DATA can accept input from the user, perform certain computations, then have the output redirected to a file named DATA, instead of showing it on the screen."
818,What are run-time errors?,"These are errors that occur while the program is being executed. One common instance wherein run-time errors can happen is when you are trying to divide a number by zero. When run-time errors occur, program execution will pause, showing which program line caused the error. "
819,What is the difference between functions abs() and fabs()?,"These 2 functions basically perform the same action, which is to get the absolute value of the given value. Abs() is used for integer values, while fabs() is used for floating type numbers. Also, the prototype for abs() is under <stdlib.h>, while fabs() is under <math.h>."
820,What are formal parameters?,"In using functions in a C program, formal parameters contain the values that were passed by the calling function. The values are substituted in these formal parameters and used in whatever operations as indicated within the main body of the called function."
821,What are control structures?,"Control structures take charge at which instructions are to be performed in a program. This means that program flow may not necessarily move from one statement to the next one, but rather some alternative portions may need to be pass into or bypassed from, depending on the outcome of the conditional statements. "
822,When is a switch statement preferable over an if statement?,"The switch statement is best used when dealing with selections based on a single variable or expression. However, switch statements can only evaluate integer and character data types."
823,What are global variables and how do you declare them?,"Global variables are variables that can be accessed and manipulated anywhere in the program. To make a variable global, place the variable declaration on the upper portion of the program, just after the preprocessor directives section."
824,What are enumerated types?,"Enumerated types allow the programmer to use more meaningful words as values to a variable. Each item in the enumerated type variable is actually associated with a numeric code. For example, one can create an enumerated type variable named DAYS whose values are Monday, Tuesday Sunday. "
825,What does the function toupper() do?,"It is used to convert any letter to its upper case mode. Toupper() function prototype is declared in <ctype.h>. Note that this function will only convert a single character, and not an entire string."
826,Is it possible to have a function as a parameter in another function?,"Yes, that is allowed in C programming. You just need to include the entire function prototype into the parameter field of the other function where it is to be used."
827,What are multidimensional arrays?,"Multidimensional arrays are capable of storing data in a two or more dimensional structure. For example, you can use a 2 dimensional array to store the current position of pieces in a chess game, or position of players in a tic-tac-toe program."
828,Which function in C can be used to append a string to another string?,"The strcat function. It takes two parameters, the source string and the string value to be appended to the source string."
829,What is the difference between functions getch() and getche()?,"Both functions will accept a character input value from the user. When using getch(), the key that was pressed will not appear on the screen, and is automatically captured and assigned to a variable. When using getche(), the key that was pressed by the user will appear on the screen, while at the same time being assigned to a variable. "
830,"Dothese two program statements perform the same output? 1) scanf(%c, &letter);  2) letter=getchar()","Yes, they both do the exact same thing, which is to accept the next key pressed by the user and assign it to variable named letter."
831,What are structure types in C?,Structure types are primarily used to store records. A record is made up of related fields. This makes it easier to organize a group of related data.
832,What does the characters r and w mean when writing programs that will make use of files?,"r means read and will open a file as input wherein data is to be retrieved. w means write, and will open a file for output. Previous data that was stored on that file will be erased."
833,What is the difference between text files and binary files?,"Text files contain data that can easily be understood by humans. It includes letters, numbers and other characters. On the other hand, binary files contain 1s and 0s that only computers can interpret. "
834,is it possible to create your own header files?,"Yes, it is possible to create a customized header file. Just include in it the function prototypes that you want to use in your program, and use the #include directive followed by the name of your header file."
835,What is dynamic data structure?,"Dynamic data structure provides a means for storing data more efficiently into memory. Using dynamic memory allocation, your program will access memory spaces as needed. This is in contrast to static data structure, wherein the programmer has to indicate a fix number of memory space to be used in the program."
836,What are the different data types in C?,"The basic data types are int, char, and float. Int is used to declare variables that will be storing integer values. Float is used to store real numbers. Char can store individual character values."
837,What is the general form of a C program?,"A C program begins with the preprocessor directives, in which the programmer would specify which header file and what constants (if any) to be used. This is followed by the main function heading. Within the main function lies the variable declaration and program statement."
838,What is the advantage of a random access file?,"If the amount of data stored in a file is fairly large, the use of random access will allow you to search through it quicker. If it had been a sequential access file, you would have to go through one record at a time until you reach the target data. A random access file lets you jump directly to the target address where data is located. "
839,"In a switch statement, what will happen if a break statement is omitted?","If a break statement was not placed at the end of a particular case portion? It will move on to the next case portion, possibly causing incorrect output."
840,Describe how arrays can be passed to a user defined function,"One thing to note is that you cannot pass the entire array to a function. Instead, you pass to it a pointer that will point to the array first element in memory. To do this, you indicate the name of the array without the brackets."
841,What are pointers?,"Pointers point to specific areas in the memory. Pointers contain the address of a variable, which in turn may contain a value or even an address to another memory."
842,Can you pass an entire structure to functions?,"Yes, it is possible to pass an entire structure to a function in a call by method style. However, some programmers prefer declaring the structure globally, then pass a variable of that structure type to a function. This method helps maintain consistency and uniformity in terms of argument type."
843,What is gets() function?,"The gets() function allows a full line data entry from the user. When the user presses the enter key to end the input, the entire line of characters is stored to a string variable. Note that the enter key is not included in the variable, but instead a null terminator \0 is placed after the last character."
844,The % symbol has a special use in a printf statement. How would you place this character as part of the output on the screen?,"You can do this by using %% in the printf statement. For example, you can write printf(10%%) to have the output appear as 10% on the screen. "
845,How do you search data in a data file using random access method?,"Use the fseek() function to perform random access input/ouput on a file. After the file was opened by the fopen() function, the fseek would require three parameters to work: a file pointer to the file, the number of bytes to search, and the point of origin in the file."
846,Are comments included during the compilation stage and placed in the EXE file as well?,"No, comments that were encountered by the compiler are disregarded. Comments are mostly for the guidance of the programmer only and do not have any other significant use in the program functionality."
847,Is there a built-in function in C that can be used for sorting data?,"Yes, use the qsort() function. It is also possible to create user defined functions for sorting, such as those based on the balloon sort and bubble sort algorithm. "
848,What are the advantages and disadvantages of a heap?,"Storing data on the heap is slower than it would take when using the stack. However, the main advantage of using the heap is its flexibility. Thats because memory in this structure can be allocated and remove in any particular order. Slowness in the heap can be compensated if an algorithm was well designed and implemented. "
849,How do you convert strings to numbers in C?,"You can write you own functions to do string to number conversions, or instead use Cs built in functions. You can use atof to convert to a floating point value, atoi to convert to an integer value, and atol to convert to a long integer value."
850,What is the use of a semicolon (;) at the end of every program statement?,"It has to do with the parsing process and compilation of the code. A semicolon acts as a delimiter, so that the compiler knows where each statement ends, and can proceed to divide the statement into smaller elements for syntax checking."
851,What Is The Difference Between C And C++ ?,"  C is a procedural language on the other hand c++ is an object oriented language.
    C follows top down approach, c++ follows bottom up approach.
    C is a low level language, c++ is a middle level language.
    Input and putput functions differs in the two languages, c uses printf and scanf whereas c++ uses >> and << as input and output operators.
    C++ can be broken down to solve real world problems which is not the case in c.
"
852,What Is The Difference Between Declaration And Definition ?,"There are basically two differences between declaration and definition : 
 In declaration no space is reserved for the variable, declaration only tells about the 'type' of the variable we are using or we will be using int he program.
    Definition on the other hand reserves the sapce for the variable and some initial value is given to it.
    Another major difference is that redeclaration is not an error whereas redefinition is an error,
    In simple words, when we declare no space is reserved for the variable and we can redeclare it in the program
    On the other hand, when we define a variable some sapce is reserved for it to hold values plus some initial value is also given to it, apart from it we cannot give another definition to the variable, i.e. we cannot define it again.
"
853,If You Want To Share Several Functions Or Variables In Several Files Maintaining The Consistency How Would You Share It?,"To maintain the consistency between several files firstly place each definition in '.c' file than using external declarations put it in '.h' file after it is included .h file we can use it in several files using #include as it will be in one of the header files, thus to maintain the consistency we can make our own header file and include it where ever needed."
854,What Do You Mean By Translation Unit?,"A Translation Unit is a set of source files that is seen by the compiler and it translate it as one unit which is generally.file and all the header files mentioned in #include directives.
When a C preprocessor expands the source file with all the header files the result is the preprocessing translation unit which when further processed translates the preprocessing translation unit into translation unit, further with the help of this translation unit compiler forms the object file and ultimately forms an executable program."
855,Describe Linkages And Types Of Linkages?,When we declare identifiers within the same scope or in the different scopes they can be made to refer the same object or function with the help of likages. 
856,"Keeping In Mind The Efficiency, Which One Between If-else And Switch Is More Efficient?","Between if-else chain and switch statements, as far as efficiency is concerned it is hard to say that which one is more efficient because both of them posses hardly any difference in terms of efficiency. 
    Switch can ne converted into if else chain internally by the compiler.
    Switch statements are compact way of writting a jump table whereas if-else is a long way of writting conditions.
    Between if-esle and switch statements, switch cases are prefered to be used in the programming as it is a compact and cleaner way of writting conditions in the program.

    "
857,What Are Structures And Unions?,"While handling real world problems we come across situations when we want to use different data type as one, C allows the user to define it own data type known as structures and unions.Structures and unions gathers together different atoms of informations that comprise a given entity."
858,What Is The Difference Between Structures And Unions?,"Conceptually structures and unions are same, the differnce between them lies in their 'Memory Management' or in simple words the memory required by them.
    Elements in structures are stored in contiguous blocks, where as in unions the memory is allocated in such a way that the same memory allocated for one variable serves as its memory at one occassion and as memory for another varioable at some other occassion. 
    Therefore, the basic difference lies in the way mrmory is allocated to both structures and unions.
"
859,What Do You Mean By Enumerated Data Type?,Enumerated Data type helps the user in defining its own data type and also gives the user an opportunity to define what values this type can take.
860,Keyword Mean In Declaration?,"This keyword indicated that the function or the variable is implemented externally and it emphasizes that the variable ot the function exits external to the file or function.
We use this keyword when we want to make anything global in the project, it does not lie within any function."
861,Can Union Be Self Referenced?,"No, Union cannot be self referenced because it shares a single memory for all of its data members.View answers in details"
862,. Define Pointers?,"Pointes are special type of variables that are used to store the memory address of the other variables.
    Pointers are declared normallt as other variables withe diffrence of * that is present in front of the pointer identifier.
    There are two operators that are used with the pointers one is '&' and another one is '*'.
    & is known as address of operator and * is known as dereferncing operator, both are prefix unary operators.
"
863,Which Format Specifier Is Used For Printing A Pointer Value?,"   %p is used to display the corresponding argument that is a pointer.
    %x can also be used to print values in hexadecimal form.
"
864,What Do You Mean By Global Variables?,"These are the variables which remains visible throughout the program and are not recreated when they are recalled.
These types are by default initialised to zero and allocated memory on Data Segment.View answers in details"
865,What Do You Mean By Volatile Variable?,"Variables prefixed with the keyword volatile acts as a data type qualifier. The volatile keyword attempts to alter the default way in which the variables are stored and the way the compiler handles the variables.

It is a kind of instruction to the optimizer to not to optimize the varabli during compilation"
866,What Is The Prototype Of Printf Function?,"Prototype of printf function is:
int printf( const char *format ,?)"
867,Define Macro?,"
    Macros are the identifiers that represent statements or expressions in other words macros are fragment of code which is been given a name. #define directive is used to dedine a macro.
    Example, we have define a macro i.e SQUARE(x) x*x. 
    Here the macro determines the square of the given number. Macro Declaration: #define name text.
"
868,What Is A Void Pointer?,"When we declare a variable as a pointer to a variable of type void, it is known as void pointer. Another name for it is generic pointer.

In general we cannot have a void type variable,but if the variable is of void type it do not point to any data and due to this it cannot be de-referenced."
869,What Is A Unnitialised Pointer?,When we create a pointer the memory to the pointer is allocated but the contents or value that memory has to hold remains untouched. Unitialised pointers are those pointers which do not hold any initial value.
870,What Is Dangling Pointer?,These are the pointers that do not point to any object of appropriate type. These are special cases of memory vialation as they do not point to any appropraite type.These arises when some object is deleted from the memory or when an object is deallocated thus the pointer keeps on pointin to the memory location untill it is modified. Dangling pointers may lead to unpredictable results
871,What are the Comments in C++? ,Comments in C++ are simply a piece of source code ignored by the compiler. They are only helpful for a programmer to add a description or additional information about their source code.
872,What Do You Mean By Inheritance?,"Inheritance is the process of creating new classes, called derived classes, from existing classes or base classes. The derived class inherits all the capabilities of the base class, but can add embellishments and refinements of its own."
873,Can We Define A Constructor As Virtual In C++?,"No, we cannot define constructors as virtual because constructors have the same name as their classes and no two constructors of base-derived classes can have the same name. So, when we initialize an object of the base or derived class with the help of virtual constructors, the base constructor is invoked instead of the derived constructor. Therefore, it is not possible to define a constructor as virtual."
874,Can We Declare A Base-class Destructor As Virtual?,"Yes, we can declare a base-class destructor as virtual that makes all derived-class destructors as virtual even if they do not have the same name as base-destructor. The problem arises when the derived class's pointer refers to a base class. For this reason, the base class destructor should be declared as virtual so that the appropriate destructor is called on calling the delete method of the base class object."
875,How Does A Copy Constructor Differs From An Overloaded Assignment Operator?,A copy constructor uses the value of an argument to construct a new object. We can use an overload assignment operator to assign the value of an existing object of the same class to another existing object in that class.
876,Define The Process Of Error-handling In Case Of Constructor Failure?,"If the constructor does not have the return statement, then it indicates failure in handling the error by throwing an exception."
877,What Is A Default Constructor?,"A zero-argument constructor or a constructor in which all the arguments have default values is called a default constructor.
For example:
A Al; // default constructor called."
878,Define The Process Of Handling In Case Of Destructor Failure?,"In order to handle a failed destructor, you need to write a message to a log file; however, do not throw an exception. There is a rule in C++ that exception cannot be thrown from a destructor, which is called when the process of ""stack unwinding"" occurs in other exceptions. For example, if someone says throw waste files(), the stack frames between the throw waste files() and the catch (waste files) will get popped. This is known as stack unwinding. It is the process of destroying all the local objects related to those stack frames and calling destructors in case of throwing of an exception by one of those destructors. For example, if an object named Bar is thrown, then the C++ runtime system is in a neutral situation means either to avoid the Bar and end up in the catch (waste files) or ignore the function Foo and look for a catch (Bar) handler. It will call in the terminate () process to end the program."
879,What Is A Virtual Destructor?,"Virtual destructors help in destroying objects without knowing their type. With the help of the virtual function mechanism, the appropriate destructor for the object is invoked. In the case of abstract classes, destructors can also be declared as pure virtual functions. For example, class A derives from class B. Then, on calling the derived class dynamically at the execution time, the destructor will first call the derived class that is class A, and then the base class that is class B.
It is important to note that theVirtual keyword, when used with the destructor, ensures the calling of all the derived and base class destructors and therefore helps in the proper execution and closing of the program"
880,Can You Explicitly Call A Destructor On A Local Variable?,"No, the destructor is called when the block closes in which the local variable was created.
If a destructor is called explicitly twice on the same object, the result ends in an undefined behavior because the local variable gets destroyed when the scope ends."
881,What Are Shallow And Deep Copies?,"A shallow copy is used to copy actual values of the data. It means, if the pointer points to dynamically allocated memory, the new object's pointer in the copy still points to items inside the old objects and the returned object will be left pointing to items that are no longer in scope. A copy of the dynamically allocated objects is created with the help of a deep copy. This is done with the help of an assignment operator, which needs to be overloaded by the copy constructor."
882,What Do You Understand By Zombie Objects In C++?,"In a situation, where an object is created in a class, a constructor fails before its full execution. It is very difficult to ensure about the execution of the constructor whether the constructor would return a value or not. Objects that are no more required for an application are called zombie objects. These zombie objects occupy a space in the memory and wait for their termination."
883,Should The This Pointer Can Be Used In The Constructor?,"
    We can use the this pointer in the constructor in the initialization list and also in the body. However, there is a feeling that the object is not fully formed so we should not use this pointer. Let's understand the use of the this pointer with the help of the following example. The declared data members of a base class and/or the declared data members of the constructor's own class can be accessed by the constructor {body} and/or a function called from the constructor. This is possible because of the full construction of constructor's body at the time of execution. The preceding example always works.
    The override in the derived class is not possible for a function called from the constructor and the {body} of a constructor which is independent of calling the virtual member function by the explicit use of the this pointer.
    Please make sure that the initialization of other data member has already been done before passing the data member to another data member's initializer in this object. With the help of some straightforward language rules (independent of the specific compiler that you are using), you can confirm about the determination of initialization of data members.
    Without the prior knowledge of these rules, there is no use of passing any data member from the this object.
"
884,What Do You Understand By A Pure Virtual Member Function?,"A virtual function with no body structure is called a pure virtual member function. You can declare a pure virtual member function by adding the notation =0 to the virtual member function declaration. For example, area () is a virtual function, but when it is declared as shown in the following expression, it becomes a pure virtual member function: virtual int area () =0;

To avoid a compilation error, all the classes need to implement pure virtual classes that are derived from the abstract class."
885,How Can Virtual Functions In C++ Be Implemented?,"When a class has at least one virtual function, the compiler builds a table of virtual function pointers for that class. This table, commonly called the v-table, contains an entry for each virtual function in the class. The constructor of the class is used to create this table. Each object of the class in memory includes a variable called the vptr, which points to the class's common vtbl. The _rst (which creates the vtable) is constructed by the base classes after the construction of the derived classes. The derived class constructor overwrites the entries of the vtable, if its constructor overrides any virtual function of the base class. Therefore, you need not call every function from a constructor just to avoid the error prone scenario of calling the Base class constructor instead of the derived class constructor (which fails to set the entries of objects of vtable)."
886,What Do You Understand By Pure Virtual Function? Write About Its Use?,"A pure virtual function in a base class must have a matching function in a derived class. A program may not declare an instance of a class that has a pure virtual function. A program may not declare an instance of a derived class if that derived class has not provided an overriding function for each pure virtual function in the base. If you want programmers to override certain functions in a class, such as those that need information customized for a particular installation, you should make these functions pure virtual."
887,How The Virtual Functions Maintain The Call Up?,"The call is maintained through vtable. Each object includes a variable known as vptr, which points to the class's common vtable. It contains an entry for every virtual function. On calling the function, vtable calls the appropriate function using vptr."
888,Write A Note About Inheritance?,"Inheritance is a mechanism that allows the object of one class to utilize the form and model or behavior of another class. A class derived from the base class inherits attributes, functions, or methods that implement the base class to the derived class and also extends the derived class by overriding functions and adding new additional attributes and functionalities."
889,What Is The Need Of Multiple Inheritance?,"The multiple inheritance allows you to define a new class that inherits the characteristics of several base classes which are not related to each other. The vehicle class encapsulates the data and behavior that describe vehicles along with other information, such as date of purchase, life, and maintenance schedules. Classes that support specific kinds of vehicles, such as trucks, airplanes, and cars are also derived from the vehicle class. The asset class encapsulates the data and behavior of the organization's assets, including acquiring date, and depreciation schedule data for accounting purposes. A company car, being both a vehicle and an asset, is represented by a class that derives from both base classes."
890,How Can You Say That A Template Is Better Than A Base Class?,"In case of designing a generic data type to manage objects of other data types which are unknown to their container class, a template is preferred over a base class. A template can contain more than one data type parameter, making it possible to build parameterized data types of considerable complexity. The class template also allows the declaration of more than one object in the same program."
891,Explain The Concept Of Multiple Inheritance (virtual Inheritance). Write About Its Advantages And Disadvantages?,"Multiple inheritance is defined as the ability of a derived class to inherit the characteristics of more than one base class. For example, you might have a class zoo which inherits various animal classes. The advantage of multiple inheritance is that you can create a single derived class from several base classes. It helps in understanding the logic behind these complex relationships.
The multiple inheritance is not preferred by the programmers because with multiple base classes, there are chances of conflicts while calling a method in the sub class that exists in both the base classes. For example, if you have a class named zoo that inherits both the Anaconda and Zebra classes, then each base class might define a different version of the method walk, which creates a conflicting situation."
892,Describe Inheritance And Non-inheritance Of A Derived Class?,"Using inheritance, you can derive all the data members and all the other common functions of the base class and still retain the functionality of the common methods of the base class. For example, the animal class with eat, sleep and breathe methods comprises the base class because they are common to all animals. Now, a new class Elephant with a method trumpet is derived from the class animal. With the help of inheritance, the Elephant class inherits the trumpet method and still retains the eat, sleep, and breathe methods from the base class, animal.Therefore, you can add new methods to an existing class with the retaining of common methods. There are few methods that are not inherited on creating a derived class which includes constructors, destructors, and assignment operator methods of their base classes.
"
893, Write A Note About The Virtual Member Function?,"A virtual function is a member function of the base class and relies on a specific object to determine which implementation of the function is called. However, a virtual function can be declared a friend of another class. If a function is declared virtual in a base class, you can still access it directly using the :: operator. Note that if you do not override a virtual member function in a derived class, a call to that function uses the function implementation defined in the base class."
894,Should The Member Functions Which Are Made Public In The Base Class Be Hidden?,"As the public member functions of the base class are necessary to implement the public interface of the class, the member functions which are made public in the base class should never be hidden. When you are designing a class, make the derived data members private because a private member of the derived class is accessed through the protected or public member functions of the base class"
895,Can Circle Be Called An Ellipse?,"Yes, a circle can be called an ellipse. Let's understand this concept with the help of an example, if ellipse has a member function named as setsize with the widthQ of the object as x and its height() as y. There are two kinds of relationships that exist between a circle and an ellipse:

    Circle and ellipse can be made as two different classes :

In this case, ellipse can be derived from AsymmetricShape class and has a member function named as setSize(x,y). On the contrary, circle can be derived from SymmetricalShape class and has a member function named as setSize(size). Therefore, they both are unrelated in its member functions as well as in their derivations.

     Circle and ellipse can be derived from a base class :

In this case, circle and ellipse both can be inherited from the class Oval because class Oval can only have setSize(size) member function which sets the height() and widthQto the size of the object."
896, How Can You Differentiate Between Inheritance And Implementation In C++?,"With the help of abstract base classes, we can differentiate between interface and implementation in C++."
897, Write About Abstract Base Classes?,"An abstract base class is a class definition that is always a base class for other classes to be derived from. No specific objects of the base class are declared by the program. A C++ abstract base class is one that has a pure virtual function, a protected constructor, or a protected destructor.
At the design level, you create a pure virtual method by using = 0 in place of a method body. This notation specifies that the member function is a pure virtual function. This means that the base class is an abstract base class, and the class designer intends the class to be used only as a base class. The base class may or may not provide a function body for the pure virtual function. In either case, a program that uses this class may not directly declare any objects of the abstract base class. If the program declares an object of a class directly or indirectly derived from the abstract base class, the pure virtual function must be overridden explicitly."
898, Which Should Be More Useful: The Protected And Public Virtuals?,"Public virtuals are more preferable than protected virtuals. Public virtuals permit a program to directly modify the values of data members. It can be accessible to any function that is within the scope of the structure. It translates the implementation for the user of the class. It is the most common, convenient, and easiest way to implement by any of the programs.
On the other hand, protected virtual functions are used for hiding some methods or data members from the outside class making it consistent and symmetrical in its approach. It is condition specific, so not commonly used."
899, Describe The Setting Up Of My Member Functions To Avoid Overriding By The Derived Class?,"To avoid overriding of the member functions by the derived class, the leaf method is used. With the help of the leaf method, it is possible to leave the code unaligned at the time of execution by simply adding a comment next to the method. This method is easy, fast, and inexpensive to use."
900,How Do C++ Struct Differs From The C++ Class?,"C++ defines structures and classes almost identically. To declare a class, you use the class keyword in place of the struct keyword. The only other differences are related to the default access specifiers. The members of a structure have public access by default; whereas, the member of a class has private access by default. The concept of encapsulation is supported by the class only and not the structure"
901,Write About The Use Of The Virtual Destructor?,"When an object is declared with the new operator and the pointer type is that of a base class with a non-virtual destructor, the base destructor executes instead of the derived destructor. When a base class destructor is virtual, the compiler calls the correct destructor function irrespective of the type of the pointer.
If the base class needs no custom destruction, you must still provide a virtual destructor (with an empty block) to permit the proper destructor calls for dynamically allocated objects. Moreover, by making the destructor of the base class as virtual, you can invoke the destructors of both the base and derived classes in the reverse order."
902, Write A Note On Encapsulation?,"Encapsulation is an object-oriented design approach that closely binds the implementation of a class to its data representation, logically hides the details of the implementation from users of the data type, and provides a public interface to the data type's behavior. It implies an implementation, which is hidden from the class user, and an interface, which is visible to the class user. It helps you to handle large scale programming tasks.The idea behind encapsulation is to take a complex system that demands a lot of attention and to turn it into an object that handles all its work internally and can easily form a concept."
903,What Are The Effects After Calling The Delete This Operator ?,"It is difficult for the compiler to know whether an object is allocated on a stack or a heap. On invoking the delete this operator, the destructor is called twice on the object related to the current context. Firstly implicitly and secondly explicitly. It results in undefined behavior and error-prone conditions. The delete this operator can only work on three conditions:

     An Instantiation of a local variable should not take place, after calling the delete this destructor.
     The this pointer should not be used after calling the delete this operator.
     The object of a derived class should be allocated and initialized with the new operator
"
904, Write About All The Implicit Member Functions Of A Class?,"All the implicit member functions of a class are listed as follows:
a. Default constructor Defines a constructor with no parameters.
b. Copy constructors Initializes the value from an existing object of a class to a new, instantiated object of that same class.
c. Assignment operator-Returns a value.
d. Default destructorRuns automatically when an object is being destroyed.
e. Address operator Takes one operand and returns the memory address of a variable or function."
905,What Is Overriding?,"To override a method, a subclass of the class that originally declared the method must declare a method with the same name, return type (or a subclass of that return type), and same parameter list.
Overriding a method means replacing the method's functionality in a child class. To implement overriding functionality, you need parent and child classes. In the child class, you define the same method signature as the one defined in the parent class."
906,Write About The Members That A Derived Class Can Add?,"Derived classes can use the constructors, destructors, and assignment operator methods of their base classes. It can also override the member functions of the base class. For example, if the base class has an assignment operator method, the compiler uses that method for the derived class as well, which is fine unless the derived class also adds its own data members (in which case, you should create a new operator = method for the derived class)."
907,Describe The Process Of Creation And Destruction Of A Derived Class Object?,"When you declare an object of a derived class, stacks or heaps allocate the space for the object. This space contains the inherited data members from the base class and also the members defined in its derived class. The initialization of the inherited data members from the base class is done with the help of the constructor of a base class. Therefore, compiler executes the constructor function of the base class followed by the constructor function of the derived class.
When an object goes out of scope, the destructors execute in the reverse order of the constructors. Firstly, the destructor of the derived class is invoked to destroy the derived class object, and then the destructor of a base class is invoked. This process helps to allocate the required space."
908,What Is An Object?,"An object is a declared instance of a data type, which includes standard C++ data types as well as objects of classes. In other words, they are the variables that you declare in the class. In OOP, objects represent real world entities, such as students, doctors, and bank accounts. These objects can interact with each other by sending or receiving messages. An object has the following three main characteristics:

     It has a state
     It may or may not display a behavior
     It has a unique identity
"
909,Define A Good Interface?,"A good interface is the one that hides unnecessary details and provides a simplified way for making applications with all the required information and different software related to different applications. A good interface should provide users an opportunity to explore and understand the different concepts related to the tasks they want to do. In this way, it ensures good communication between the user and the computer."
910,Write About The Role Of C++ In The Tradeoff Of Safety Vs. Usability?,"Earlier in C, an encapsulation is achieved by making the methods static in a class. On the contrary, in C++, it would not work.
Programmers use structs in C for making multiple instances. The creation of multiple instances is not supported directly by the data with static keyword in a class. This situation made the concept of tradeoff between safety (information hiding) and usability (multiple instances) worse.
On the contrary, C++ supported both multiple instances and encapsulation with the help of the concept of a class. The public part of a class includes the interface of the class which includes public member functions and friends functions of a class. The private and/or protected parts of a class includes an implementation of the class which includes the data. This results in a struct which is encapsulated. This depicts the strong tradeoff between safety (information hiding) and usability(multiple instances)."
911,How Can You Prevent Accessing Of The Private Parts Of My Class By Other Programmers (violating Encapsulation)?,"Encapsulation only hides the details of the implementation from users of the data type, and provides a public user interface. Encapsulation only maintains the integrity of the internal coding inside the methods of a class, but not able to prevent accessing the private or protected parts of a class by the user."
912, Can Non-public Members Of Another Instance Of The Class Be Retrieved By The Method Of The Same Class?,"Yes, the non-public members of another instance of the class can be retrieved by the method of the same class. Retrieval depends on the type of the class whether it is of a reference/pointer/object class. It seems to break the rule of encapsulation. However, there is a need of get () method with a public specifier for the non-public members to retrieve the method of the same class because an explicit argument (means the pointer by which ""this"" is not called) can be taken by at least one method of the same class."
913,Can Encapsulation Be Called As A Security Device?,"Encapsulation hides important and classified data from accidental manipulation by members of the same program. Note that the encapsulated data of a class can be accessible outside the class only when the data is used in the function of the class. However, a limited number of operations can be performed on encapsulated data by executing the functions or methods of the class. An encapsulation prevents the internal error to occur and not the explicit attacks or intentional attacks and therefore cannot be called as a security device."
914,How The Keyword Struct Is Different From The Keyword Class In C++?,"In C++, a class is similar to a struct with the exception that, by default, all the members of a class are private; while the members of a struct are public. Encapsulation is not supported by structures but supported by classes."
915,How New/delete Differs From Malloc()/free?,"The memory uses the malloc() operator, which in turn uses the free operator, to remove the unnecessary programs. On the other hand, the program builds the array by using the new operator, fills it with random numbers, displays each of the elements in the array, and deletes the array by using the delete operator. The new and delete operators should be used in C++ because they are type safe. The malloc operator is used when there is a need of forcing a type on an object because a void pointer is returned by it. Moreover, that object cannot be assigned to other types."
916,How The Delete Operator Differs From The Delete[]operator?,"When the new[] operator is used to allocate memory dynamically, the delete[]operator is used to free the memory. The new[] operator is used to allocate memory to an array of values, which starts with the index 0."
917,How A New Operator Differs From The Operator New?,"The new operator creates a class's new instance. On the other hand, overloading of a new operator is done globally with the help of the operator new. The new operator allocates memory for the item and assigns the address of that memory to the pointer by using the name of an item with a pointer of a data type, structure, or array. For example, consider the following code snippet:Double * pi = new double;
In the preceding code snippet, the new operator returns a pointer to the double variable, because it allocates the space for a double value."
918,Explain The Term Memory Alignment?,"The primary meaning of the term alignment is to maintain the appropriate positioning of different components in the memory with respect to each other. In C++, there is a requirement of setting of various objects and variables in a particular way in the system's memory.Therefore, many data variables are aligned automatically by the compiler according to their processor and type."
919,"Can A New Be Used In Place Of Old Mallocq? If Yes, Why?",The new operator should be used in place of old malloc because the new operator ensures the calling of an appropriate destructor at the time of execution and also it is more type-safe than mallocQ.
920,Is It Possible To Use A New For The Reallocation Of Pointers ?,The reallocation of pointers cannot be done by using new. It can be done by using the reallocQ operator.
921," On Throwing An Exception By The Animal Constructor In P = New Animalq, Can Memory Leak Occur?","Memory of an animal class cannot leak by throwing an exception in p = new Animal(). In case of occurrence of an exception during the Animal constructor of p = new Animal(),there is a surety of the automatic releasing of the allocated memory back to the heap."
922,"What Would Happen On Forgetting [], While Deallocating An Array Through New?","If you forget to use [] while deallocating an array through new, it throws a run time or compile time exception and results in the corruption of the heap.Therefore, it is the responsibility of the programmer to establish the connection between T[n] and delete[]p correctly."
923,Write About The Retrieval Of N Number Of Objects During The Process Of Delete[]p?,"The n number of objects can be retrieved with the help of the pointer p (it stores the n number of objects) at the run time.This can be achieved by the application of two techniques, which are:
   An array which can be associated with p in the form of key and a value such as n.
    Over-allocation of the array can be done. The preceding techniques are used by the compilers of commercial grade.
"
924,Is It Possible For A Member Function To Use Delete This?,"It is possible for a member function to use delete this but on certain conditions which are as follows:

     Ensure that the allocation of this object is done through new[] operator.
    Ensure that the invocation of a member function done on this (current) object will be the last member function.
    Ensure that calling of other member functions and data members should not be done after the line of code which includes delete this.
    Examination or comparison of this pointer with other pointers and NULL, printing or casting it, must be avoided after using the delete this.

The preceding points are applied in the cases where the this pointer belongs to the base class in the absence of the virtual destructor."
925,"Discuss The Effects Occur, After An Exception Thrown By A Member Function Is Unspecified By An Exception Specification?","When a function throws an exception, not given in the specification, the exception is passed to a system function named unexpected. The unexpected function calls the latest function named as an argument in a call to the set_unexpected function, which returns its current settings. A function with no exception specification, by default, calls the terminate function, which finally calls the abort (function to terminate the program)."
926, What Is The Role Of Copy Constructor In Copying Of Thrown Objects?,"A copy constructor with a public access specifier must be applied to the objects which are thrown.With the help of a compiler, the code is generated through which copying of thrown objects can be done. The thrown objects must have a copy constructor with the public access specifier."
927,How Can An Improvement In The Quality Of Software Be Done By Try/catch/throw?,"Error-handling is necessity while developing applications to account for unexpected situations, such as insufficient memory, resource allocation errors, inability to find/open files, division by zero, an arithmetic or array overflow, and the exhaustion of free heap space, which occur at runtime.

Programmers have various styles of dealing with such exceptions, such as try/catch /throw methods, which cause diversity in coding practice. This diversity increases with the use of user-defined classes, as each class brings with it potential class-specific errors. These methods provide a standard facility to deal with runtime exceptions. Moreover, try/catch/throw result in the code with fewer errors. It is low in cost in relation to development. With error-handling, your program can detect unexpected events and recover from them."
928, What Is A Dangling Pointer?,"When the location of the deallocated memory is pointed by the pointer even after the deletion or allocation of objects is done, without the modification in the value of the pointer, then this type of pointer is called a dangling pointer."
929, List The Issue That The Auto_ptr Object Handles?,"The auto_ptr object is used to deallocate memory, which is allocated to a variable, when the variable goes out of scope."
930,What Are Smart Pointers?,"Smart pointers are almost similar to pointers with additional features, such as automatic destruction of a variable when it becomes out of scope and the throwing of exceptions that ensures the proper destruction of the dynamically allocated objects. They are useful in keeping tracks of dynamically allocated objects. Due to these additional capabilities, they reduce the possibilities of occurrence of exceptions and errors in a program and ensure that the written code is safe and efficient."
931,How A Pointer Differs From A Reference?,"A pointer differs from a reference in the following ways:

     In the case of reference, an object must always be referred while initializing. On the contrary, such restrictions are not meant for pointers.
    The different types of objects can be pointed by the pointers by reassigning the pointers with different objects. On the contrary, in a reference, the same object which was initialized earlier can only be referred by a reference.
    You can use a null address in a pointer parameter to indicate that a variable does not exist; whereas, there is no existence of a null reference in C++.
     A reference usually appears outside an object; whereas, a pointer generally appears inside an object.
"
932,How Const Int *ourpointer Differs From Int Const *ourpointer?,"As a rule, pointer declarations should be read from right to left. In the pointer declaration, const int *ourPointer, ourPointer is a pointer to a const int object, which cannot be changed by using a pointer. Whereas in case of the int const *ourPointer pointer declaration, ourPointer is a const pointer to an int object, in which an int object can be changed by using a pointer but the pointer itself cannot be changed because it is constant."
933, Explain How Overloading Takes Place In C++?,"C++ supports two types of overloading namely, function overloading and operator overloading. Function overloading helps in defining more than one function with the same name, but with different signatures. An error is raised if two overloaded functions are provided with the same function signature. Operator overloading helps in giving special meanings to operators, when they are used with user-defined classes."
934,What Is The Difference Between Prefix And Postfix Versions Of Operator++()?,"The prefix and postfix versions of operator ++() can be differentiated on the basis of arguments defined. The postfix operator ++() consists of a dummy parameter of int datatype; whereas, a dummy parameter is not found in the prefix operator ++()."
935,Describe The Advantages Of Operator Overloading?,"Operator overloading is used to provide some extra features, behaviors, and abilities to the users of a particular class. This feature in C++ helps in controlling the functions performed by an operator and reduces the chance of occurrence of errors in a program."
936,Provide Some Examples Of Operator Overloading?,"The implementation of operator overloading is done in the following ways:

    Concatenating two std:-.string objects by using the + operator
     Incrementing a Date object by using the ++ operator
    Multiplying two different number objects by using the * operator
    Accessing array elements from an object of the Array class by using the subscript operator
"
937,Can The Operator == Be Overloaded For Comparing Two Arrays Consisting Of Characters By Using String Comparison?,"The operator == cannot be overloaded to compare two arrays consisting of characters using string comparisons. It should be noted that out of the two operands of an overloaded operator, at least one operand should be of user- defined type. This user-defined type usually refers to a class. Two characters can be compared easily using classes, such as std::string, rather than using an array containing characters."
938, Can The Creation Of Operator** Is Allowed To Perform The To-the-power-of Operations?,"No, you cannot create operator** for to-the-power-of operations. The number of parameters taken by an operator, names of the operators, priority level of the operators, and the associativity of the operators depend on language in which they are being used. The operator** is not present in C++, so it cannot be created."
939,What Is The Main Purpose Of Overloading Operators?,"The main purpose of operator overloading is to minimize the chances of occurrence of errors in a class that is using the overloaded operators. It also helps in redefining the functionalities of the operators to improve their performance. Operator overloading also makes the program clearer, readable, and more understandable by using common operators, such as +, =, and []."
940,Explain The Concept Of Friend Function In C++?,The friend function in C++ refers to a class or function that works with the private or protected members of the other class. It gets privileges to access and work with the private members of the other class. The programmer has full control over both the friend and member functions of the class and can use the features of both. The friend function does not require the use of an object and can be invoked without creating the object.
941,How The Programmer Of A Class Should Decide Whether To Declare Member Function Or A Friend Function?,"A programmer should analyze the situations or requirements for deciding whether to declare the member function or friend function for a class. When a function is declared as a friend, the function is able to access all the private and protected member of the class. A member function can be used with encapsulation point of view as friend functions violate the encapsulation and can also access all the private members although they are not a part of the class. From the security point of view, use of member function is safer than the friend function."
942,Is Recursion Allowed In Inline Functions?,"Syntactically, the recursion (calling of the function by itself) is allowed in inline function but practically, the inline functions and their properties do not remain inside the program. Moreover, the compiler is not sure about the depth of the recursion at the time of compilation."
943,. Write About The Scope Resolution Operator?,"The scope resolution operator (::) can be used to define the member functions of a program outside the boundary of a class and not within the class specifier. The global scope resolution operator, which is coded as a prefix to the variable's name (for example,:: varname), lets you explicitly reference a global variable from a scope in which a local variable has the same name.

A program can use scope resolution operator (::) to bypass the override of a base class member that a derived class has overridden."
944, Discuss The Possibilities Related To The Termination Of A Program Before Entering The Mainq Method?,"The global variables are initialized dynamically before invoking the main() method. The process of invoking the global variables is slow. If the function is called by initialization of the global variables, then the program is terminated before entering the main() method."
945,What Is Meant By The Term Name Mangling In C++?,"The mangled name includes tokens that identify the function's return type and the types of arguments. Calls to the function and the function definition itself are recorded in the relocatable object file as references to the mangled name, which is unique even though several functions might have the same similar name. Through name mangling, the name of the function is changed into coded and unique names or symbols which can be understand by the user. In this way, the function with the same name can be differentiated with the help of this coded language."
946,How A Macro Differs From A Template?,"A macro defines the meaning for an identifier.The preprocessor replaces macro in the form of strings in the source code with values derived from the macro definition.The most common usage for macros defines a global symbol that represents a value. A macro cannot call itself.
On the contrary, a template allows you to create generic functions that admit any data type as parameters and return a value without having to overload the function with all the possible data types. A template can call itself."
947,What Are The Advantages Of Using Const Reference Arguments In A Function?,"The following are the advantages of using the const reference arguments in a function:
a. Protects against errors that result in altering data of a program.
b. Allows the processing of const and non-const actual arguments by the function. On the contrary, in the prototype, the acceptance of only non-constant arguments is done by the function without a const.
c. Allows the generation and usage of a temporary variable by the function appropriately."
948, Why Do We Use The Using Declaration?,A using declaration specifies that all the identifiers in the namespace are available to the program within the scope of the using declaration. It makes all the namespace's identifiers available to the program in the context of their own outer scope. The principle use of the using declaration is to support standard library interfaces that are well known.
949,Write About The Stack Unwinding?,Stack unwinding is a process in which a destructor is invoked in a particular program for destroying all the local objects in the stack between throwing and catching of an exception.
950,In Which Situation The Program Terminates Before Reaching The Breakpoint Set By The User At The Beginning Of The Mainq Method?,"In C++, the initialization of variables is allowed before the calling of the main() method. If a function is invoked by the global variable's initialization and termination is done, then it results in the error before entering of the main() method."
951,"How Can I Disable The ""echo"" Feature?",The disabling of the echo feature is done with the help of the getpassQ function. The character keys are turned off by using the getpass(3) function.
952,What do you know about Java?,"Java is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX."
953,What are the supported platforms by Java Programming Language?,"Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX/Linux like HP-Unix, Sun Solaris, Redhat Linux, Ubuntu, CentOS, etc."
954,List any five features of Java?,"Some features include Object Oriented, Platform Independent, Robust, Interpreted, Multi-threaded"
955,Why is Java Architectural Neutral?,"Its compiler generates an architecture-neutral object file format, which makes the compiled code to be executable on many processors, with the presence of Java runtime system."
956,How Java enabled High Performance?,"java uses Just-In-Time compiler to enable high performance. Just-In-Time compiler is a program that turns Java bytecode, which is a program that contains instructions that must be interpreted into instructions that can be sent directly to the processor."
957,Why Java is considered dynamic?,it is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.
958,What is Java Virtual Machine and how it is considered in context of Javas platform independent feature?,"When Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by virtual Machine (JVM) on whichever platform it is being run."
959,ist two Java IDEs?,"Netbeans, Eclipse, etc."
960,"List some Java keywords(unlike C, C++ keywords)?","Some Java keywords are import, super, finally, etc."
961,What do you mean by Object?,Object is a runtime entity and its state is stored in fields and behavior is shown via methods. Methods operate on an object's internal state and serve as the primary mechanism for object-to-object communication.
962,Define class?,A class is a blue print from which individual objects are created. A class can contain fields and methods to describe the behavior of an object.
963,What kind of variables a class can consist of?,"A class consist of Local variable, instance variables and class variables."
964,What is a Local Variable?,"Variables defined inside methods, constructors or blocks are called local variables. The variable will be declared and initialized within the method and it will be destroyed when the method has completed."
965,What is a Instance Variable?,Instance variables are variables within a class but outside any method. These variables are instantiated when the class is loaded.
966,What is a Class Variable?,"These are variables declared with in a class, outside any method, with the static keyword."
967,What is Singleton class?,"Singleton class control object creation, limiting the number to one but allowing the flexibility to create more objects if the situation changes."
968,What do you mean by Constructor?,Constructor gets invoked when a new object is created. Every class has a constructor. If we do not explicitly write a constructor for a class the java compiler builds a default constructor for that class.
969,List the three steps for creating an Object for a class?,"An Object is first declared, then instantiated and then it is initialized."
970,What is the default value of byte datatype in Java?,Default value of byte datatype is 0.
971,What is the default value of float and double datatype in Java?,Default value of float and double datatype in different as compared to C/C++. For float its 0.0f and for double its 0.0d
972,When a byte datatype is used?,"This data type is used to save space in large arrays, mainly in place of integers, since a byte is four times smaller than an int."
973,What is a static variable?,"Class variables also known as static variables are declared with the static keyword in a class, but outside a method, constructor or a block."
974,What do you mean by Access Modifier?,"Java provides access modifiers to set access levels for classes, variables, methods and constructors. A member has package or default accessibility when no accessibility modifier is specified."
975,What is protected access modifier?,"Variables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class."
976,What do you mean by synchronized Non Access Modifier?,"Java provides these modifiers for providing functionalities other than Access Modifiers, synchronized used to indicate that a method can be accessed by only one thread at a time."
977,"According to Java Operator precedence, which operator is considered to be with highest precedence?",Postfix operators i.e () [] . is at the highest precedence.
978,Variables used in a switch statement can be used with which datatypes?,"Variables used in a switch statement can only be a string, enum, byte, short, int, or char."
979,When parseInt() method can be used?,This method is used to get the primitive data type of a certain String.
980,Why is String class considered immutable?,"The String class is immutable, so that once it is created a String object cannot be changed. Since String is immutable it can safely be shared between many threads ,which is considered very important for multithreaded programming."
981,Why is StringBuffer called mutable?,"The String class is considered as immutable, so that once it is created a String object cannot be changed. If there is a necessity to make alot of modifications to Strings of characters then StringBuffer should be used."
982,What is the difference between StringBuffer and StringBuilder class?,"Use StringBuilder whenever possible because it is faster than StringBuffer. But, if thread safety is necessary then use StringBuffer objects."
983,Which package is used for pattern matching with regular expressions?,java.util.regex package is used for this purpose.
984,java.util.regex consists of which classes?,"java.util.regex consists of three classes ? Pattern class, Matcher class and PatternSyntaxException class."
985,What is finalize() method?,"It is possible to define a method that will be called just before an object's final destruction by the garbage collector. This method is called finalize( ), and it can be used to ensure that an object terminates cleanly."
986,What is an Exception?,An exception is a problem that arises during the execution of a program. Exceptions are caught by handlers positioned along the thread's method invocation stack.
987,What do you mean by Checked Exceptions?,"It is an exception that is typically a user error or a problem that cannot be foreseen by the programmer. For example, if a file is to be opened, but the file cannot be found, an exception occurs. These exceptions cannot simply be ignored at the time of compilation."
988,Explain Runtime Exceptions?,"It is an exception that occurs that probably could have been avoided by the programmer. As opposed to checked exceptions, runtime exceptions are ignored at the time of compliation."
989,Which are the two subclasses under Exception class?,The Exception class has two main subclasses : IOException class and RuntimeException Class.
990,When throws keyword is used?,"If a method does not handle a checked exception, the method must declare it using the throwskeyword. The throws keyword appears at the end of a method's signature."
991,When throw keyword is used?,"An exception can be thrown, either a newly instantiated one or an exception that you just caught, by using throw keyword."
992,How finally used under Exception Handling?,"The finally keyword is used to create a block of code that follows a try block. A finally block of code always executes, whether or not an exception has occurred."
993,What things should be kept in mind while creating your own exceptions in Java?,"

While creating your own exception ?
    All exceptions must be a child of Throwable.
    If you want to write a checked exception that is automatically enforced by the Handle or Declare Rule, you need to extend the Exception class.
  You want to write a runtime exception, you need to extend the RuntimeException class.

"
994,When super keyword is used?,"If the method overrides one of its superclass's methods, overridden method can be invoked through the use of the keyword super. It can be also used to refer to a hidden field."
995,What is Polymorphism?,Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object.
996,What is Abstraction?,It refers to the ability to make a class abstract in OOP. It helps to reduce the complexity and also improves the maintainability of the system.
997,What is Abstract class?,These classes cannot be instantiated and are either partially implemented or not at all implemented. This class contains one or more abstract methods which are simply method declarations without a body.
998,What is an Interface?,"An interface is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface."
999,Give some features of Interface?,"It includes ?
    Interface cannot be instantiated
    An interface does not contain any constructors.
All of the methods in an interface are abstract.

"
1000,Define Packages in Java?,"A Package can be defined as a grouping of related types(classes, interfaces, enumerations and annotations ) providing access protection and name space management."
1001,Why Packages are used?,"Packages are used in Java in-order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations, etc., easier."
1002,What do you mean by Multithreaded program?,"A multithreaded program contains two or more parts that can run concurrently. Each part of such a program is called a thread, and each thread defines a separate path of execution."
1003,What are the two ways in which Thread can be created?,"Thread can be created by: implementing Runnable interface, extending the Thread class."
1004,What is an applet?,An applet is a Java program that runs in a Web browser. An applet can be a fully functional Java application because it has the entire Java API at its disposal.
1005,An applet extend which class?,An applet extends java.applet.Applet class.
1006,Explain garbage collection in Java?,It uses garbage collection to free the memory. By cleaning those objects that is no longer reference by any of the program.
1007,Define immutable object?,An immutable object cant be changed once it is created.
1008,Explain the usage of this() with constructors?,It is used with variables or methods and used to call constructer of same class.
1009,Explain Set Interface?,It is a collection of element which cannot contain duplicate elements. The Set interface contains only methods inherited from Collection and adds the restriction that duplicate elements are prohibited.
1010,Explain TreeSet?,It is a Set implemented when we want elements in a sorted order.
1011,What is Comparable Interface?,It is used to sort collections and arrays of objects using the collections.sort() and java.utils. The objects of the class implementing the Comparable interface can be ordered.
1012,Difference between throw and throws?,"It includes:
    Throw is used to trigger an exception where as throws is used in declaration of exception.
    Without throws, Checked exception cannot be handled where as checked exception can be propagated with throws.

"
1013,Define JRE i.e. Java Runtime Environment?,Java Runtime Environment is an implementation of the Java Virtual Machine which executes Java programs. It provides the minimum requirements for executing a Java application;
1014,What is JAR file?,JAR files is Java Archive fles and it aggregates many files into one. It holds Java classes in a library. JAR files are built on ZIP file format and have .jar file extension.
1015,What is a WAR file?,"This is Web Archive File and used to store XML, java classes, and JavaServer pages. which is used to distribute a collection of JavaServer Pages, Java Servlets, Java classes, XML files, static Web pages etc."
1016,Define JIT compiler?,It improves the runtime performance of computer programs based on bytecode
1017,What is the difference between object oriented programming language and object based programming language?,Object based programming languages follow all the features of OOPs except Inheritance. JavaScript is an example of object based programming languages.
1018,What is the purpose of default constructor?,The java compiler creates a default constructor only if there is no constructor in the class.
1019,Can a constructor be made final?,"No, this is not possible."
1020,What is static block?,"It is used to initialize the static data member, It is excuted before main method at the time of classloading."
1021,Define composition?,Holding the reference of the other class within some other class is known as composition.
1022,What is function overloading?,"If a class has multiple functions by same name but different parameters, it is known as Method Overloading"
1023,What is function overriding?,"If a subclass provides a specific implementation of a method that is already provided by its parent class, it is known as Method Overriding."
1024,Difference between Overloading and Overriding?,"Method overloading increases the readability of the program. Method overriding provides the specific implementation of the method that is already provided by its super class parameter must be different in case of overloading, parameter must be same in case of overriding."
1025,What is final class?,Final classes are created so the methods implemented by that class cannot be overridden. It cant be inherited.
1026,What is NullPointerException?,"A NullPointerException is thrown when calling the instance method of a null object, accessing or modifying the field of a null object etc."
1027,What are the ways in which a thread can enter the waiting state?,"A thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method."
1028,How does multi-threading take place on a computer with a single CPU?,"The operating system's task scheduler allocates execution time to multiple tasks. By quickly switching between executing tasks, it creates the impression that tasks execute sequentially."
1029,What invokes a thread's run() method?,"After a thread is started, via its start() method of the Thread class, the JVM invokes the thread's run() method when the thread is initially executed."
1030,Does it matter in what order catch statements for FileNotFoundException and IOException are written?,"Yes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first."
1031,What is the difference between yielding and sleeping?,"When a task invokes its yield() method, it returns to the ready state. When a task invokes its sleep() method, it returns to the waiting state."
1032,Why Vector class is used?,"The Vector class provides the capability to implement a growable array of objects. Vector proves to be very useful if you don't know the size of the array in advance, or you just need one that can change sizes over the lifetime of a program."
1033,"How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters?","Unicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns."
1034,What are Wrapper classes?,"These are classes that allow primitive types to be accessed as objects. Example: Integer, Character, Double, Boolean etc."
1035,What is the difference between a Window and a Frame?,The Frame class extends Window to define a main application window that can have a menu bar.
1036,Which package has light weight components?,"javax.Swing package. All components in Swing, except JApplet, JDialog, JFrame and JWindow are lightweight components."
1037,What is the difference between the paint() and repaint() methods?,The paint() method supports painting via a Graphics object. The repaint() method is used to cause paint() to be invoked by the AWT painting thread.
1038,What is the purpose of File class?,It is used to create objects that provide access to the files and directories of a local file system.
1039,What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?,"The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented."
1040,Which class should you use to obtain design information about an object?,"The Class class is used to obtain information about an object's design and java.lang.Class class instance represent classes, interfaces in a running Java application."
1041,What is the difference between static and non-static variables?,A static variable is associated with the class as a whole rather than with specific instances of a class. Non-static variables take on unique values with each object instance.
1042,What is Serialization and deserialization?,Serialization is the process of writing the state of an object to a byte stream. Deserialization is the process of restoring these objects.
1043,What are use cases?,It is part of the analysis of a program and describes a situation that a program might encounter and what behavior the program should exhibit in that circumstance.
1044,Explain the use of sublass in a Java program?,Sub class inherits all the public and protected methods and the implementation. It also inherits all the default modifier methods and their implementation.
1045,How to add menushortcut to menu item?,"If there is a button instance called b1, you may add menu short cut by calling b1.setMnemonic('F'), so the user may be able to use Alt+F to click the button."
1046,Can you write a Java class that could be used both as an applet as well as an application?,"Yes, just add a main() method to the applet."
1047,What is the difference between Swing and AWT components?,"AWT components are heavy-weight, whereas Swing components are lightweight. Heavy weight components depend on the local windowing toolkit. For example, java.awt.Button is a heavy weight component, when it is running on the Java platform for Unix platform, it maps to a real Motif button."
1048,What's the difference between constructors and other methods?,Constructors must have the same name as the class and can not return a value. They are only called once while regular methods could be called many times.
1049,Is there any limitation of using Inheritance?,"Yes, since inheritance inherits everything from the super class and interface, it may make the subclass too clustering and sometimes error-prone when dynamic overriding or dynamic overloading in some situation."
1050,When is the ArrayStoreException thrown?,"When copying elements between different arrays, if the source or destination arguments are not arrays or their types are not compatible, an ArrayStoreException will be thrown."
1051,"When copying elements between different arrays, if the source or destination arguments are not arrays or their types are not compatible, an ArrayStoreException will be thrown.","Yes, use this() syntax."
1052,What's the difference between the methods sleep() and wait()?,"The code sleep(2000); puts thread aside for exactly two seconds. The code wait(2000), causes a wait of up to two second. A thread could stop waiting earlier if it receives the notify() or notifyAll() call. The method wait() is defined in the class Object and the method sleep() is defined in the class Thread. "
1053,When ArithmeticException is thrown?,The ArithmeticException is thrown when integer is divided by zero or taking the remainder of a number by zero. It is never thrown in floating-point operations.
1054,What is a transient variable?,"A transient variable is a variable that may not be serialized during Serialization and which is initialized by its default value during de-serialization,"
1055,What is synchronization?,Synchronization is the capability to control the access of multiple threads to shared resources. synchronized keyword in java provides locking which ensures mutual exclusive access of shared resource and prevent data race.
1056,What is the Collections API?,The Collections API is a set of classes and interfaces that support operations on collections of objects
1057,Does garbage collection guarantee that a program will not run out of memory?,Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.
1058,The immediate superclass of the Applet class?,"Panel is the immediate superclass. A panel provides space in which an application can attach any other component, including other panels."
1059,Which Java operator is right associative?,The = operator is right associative.
1060,What is the difference between a break statement and a continue statement?,"A break statement results in the termination of the statement to which it applies (switch, for, do, or while). A continue statement is used to end the current loop iteration and return control to the loop statement."
1061,"If a variable is declared as private, where may the variable be accessed?",A private variable may only be accessed within the class in which it is declared.
1062,What is the purpose of the System class?,The purpose of the System class is to provide access to system resources.
1063,List primitive Java types?,"The eight primitive types are byte, char, short, int, long, float, double, and boolean."
1064,What is the relationship between clipping and repainting under AWT?,"When a window is repainted by the AWT painting thread, it sets the clipping regions to the area of the window that requires repainting."
1065,Which class is the immediate superclass of the Container class?,Component class is the immediate super class.
1066,What class of exceptions are generated by the Java run-time system?,The Java runtime system generates RuntimeException and Error exceptions.
1067,Under what conditions is an object's finalize() method invoked by the garbage collector?,The garbage collector invokes an object's finalize() method when it detects that the object has become unreachable.
1068,How can a dead thread be restarted?,A dead thread cannot be restarted.
1069,Which arithmetic operations can result in the throwing of an ArithmeticException?,nteger / and % can result in the throwing of an ArithmeticException.
1070,Variable of the boolean type is automatically initialized as?,The default value of the boolean type is false.
1071,Can try statements be nested?,Yes
1072,What are ClassLoaders?,A class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class.
1073,What is the difference between an Interface and an Abstract class?,"An abstract class can have instance methods that implement a default behavior. An Interface can only declare constants and instance methods, but cannot implement default behavior and all methods are implicitly abstract. An interface has all public members and no implementation."
1074,What will happen if static modifier is removed from the signature of the main method?,"Program throws ""NoSuchMethodError"" error at runtime."
1075,What is the default value of an object reference declared as an instance variable?,"Null, unless it is defined explicitly."
1076,Can a top level class be private or protected?,"No, a top level class can not be private or protected. It can have either ""public"" or no modifier."
1077,Why do we need wrapper classes?,We can pass them around as method parameters where a method expects an object. It also provides utility methods.
1078,What is the difference between error and an exception?,An error is an irrecoverable condition occurring at runtime. Such as OutOfMemory error. Exceptions are conditions that occur because of bad input etc. e.g. FileNotFoundException will be thrown if the specified file does not exist.
1079,Is it necessary that each try block must be followed by a catch block?,It is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block or a finally block.
1080,"When a thread is created and started, what is its initial state?",A thread is in the ready state as initial state after it has been created and started.
1081,What is the Locale class?,"The Locale class is used to tailor program output to the conventions of a particular geographic, political, or cultural region."
1082,What are synchronized methods and synchronized statements?,Synchronized methods are methods that are used to control access to an object. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.
1083,What is runtime polymorphism or dynamic method dispatch?,"Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass."
1084,What is Dynamic Binding(late binding)?,Binding refers to the linking of a procedure call to the code to be executed in response to the call. Dynamic binding means that the code associated with a given procedure call is not known until the time of the call at run-time.
1085,Can constructor be inherited?,"No, constructor cannot be inherited."
1086,What are the advantages of ArrayList over arrays?,ArrayList can grow dynamically and provides more powerful insertion and search mechanisms than arrays.
1087,Why deletion in LinkedList is fast than ArrayList?,Deletion in linked list is fast because it involves only updating the next pointer in the node before the deleted node and updating the previous pointer in the node after the deleted node.
1088,How do you decide when to use ArrayList and LinkedList?,"If you need to frequently add and remove elements from the middle of the list and only access the list elements sequentially, then LinkedList should be used. If you need to support random access, without inserting or removing elements from any place other than the end, then ArrayList should be used."
1089,What is a Values Collection View ?,"It is a collection returned by the values() method of the Map Interface, It contains all the objects present as values in the map."
1090,What is dot operator?,The dot operator(.) is used to access the instance variables and methods of class objects.It is also used to access classes and sub-packages from a package.
1091,Where and how can you use a private constructor?,Private constructor is used if you do not want other classes to instantiate the object and to prevent subclassing.T
1092,What is the difference between the >> and >>> operators?,The >> operator carries the sign bit when shifting right. The >>> zero-fills bits that have been shifted out.
1093,Which method of the Component class is used to set the position and size of a component?,setBounds() method is used for this purpose.
1094,What is the range of the short type?,The range of the short type is -(2^15) to 2^15 - 1.
1095,What is the immediate superclass of Menu?,MenuItem class
1096,Does Java allow Default Arguments?,"No, Java does not allow Default Arguments."
1097,Which number is denoted by leading zero in java?,"Octal Numbers are denoted by leading zero in java, example: 06"
1098,Which number is denoted by leading 0x or 0X in java?,"Hexadecimal Numbers are denoted by leading 0x or 0X in java, example ? 0XF"
1099,Break statement can be used as labels in Java?,"Yes, an example can be break one;"
1100,Where import statement is used in a Java program?,Import statement is allowed at the beginning of the program file after package statement.
1101,Why is the role of init() method under applets?,It initializes the applet and is the first method to be called.
1102,Which method is called by Applet class to load an image?,"getImage(URL object, filename) is used for this purpose."
1103,Define code as an attribute of Applet?,It is used to specify the name of the applet class.
1104,Define canvas?,It is a simple drawing surface which are used for painting images or to perform other graphical operations.
1105,Define Network Programming?,"It refers to writing programs that execute across multiple devices (computers), in which the devices are all connected to each other using a network."
1106,What is a Socket?,Sockets provide the communication mechanism between two computers using TCP. A client program creates a socket on its end of the communication and attempts to connect that socket to a server.
1107,Advantages of Java Sockets?,Sockets are flexible and sufficient. Efficient socket based programming can be easily implemented for general communications. It cause low network traffic.
1108,Disadvantages of Java Sockets?,Socket based communications allows only to send packets of raw data between applications. Both the client-side and server-side have to provide mechanisms to make the data useful in any way.
1109,Which class is used by server applications to obtain a port and listen for client requests?,java.net.ServerSocket class is used by server applications to obtain a port and listen for client requests
1110,Which class represents the socket that both the client and server use to communicate with each other?,java.net.Socket class represents the socket that both the client and server use to communicate with each other.
1111,Why Generics are used in Java?,"Generics provide compile-time type safety that allows programmers to catch invalid types at compile time. Java Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods or, with a single class declaration, a set of related types."
1112,What environment variables do I need to set on my machine in order to be able to run Java programs?,CLASSPATH and PATH are the two variables.
1113,Is there any need to import java.lang package?,"No, there is no need to import this package. It is by default loaded internally by the JVM."
1114,What is Nested top-level class?,"If a class is declared within a class and specify the static modifier, the compiler treats the class just like any other top-level class. Nested top-level class is an Inner class."
1115,What is Externalizable interface?,Externalizable is an interface which contains two methods readExternal and writeExternal. These methods give you a control over the serialization mechanism.
1116,"If System.exit (0); is written at the end of the try block, will the finally block still execute?","No in this case the finally block will not execute because when you say System.exit (0); the control immediately goes out of the program, and thus finally never executes."
1117,What is daemon thread?,"Daemon thread is a low priority thread, which runs intermittently in the back ground doing the garbage collection operation for the java runtime system."
1118,Which method is used to create the daemon thread?,setDaemon method is used to create a daemon thread.
1119,Which method must be implemented by all threads?,All tasks must implement the run() method
1120,What is the GregorianCalendar class?,The GregorianCalendar provides support for traditional Western calendars
1121,What is the SimpleTimeZone class?,The SimpleTimeZone class provides support for a Gregorian calendar
1122,What is the difference between the size and capacity of a Vector?,"The size is the number of elements actually stored in the vector, while capacity is the maximum number of elements it can store at a given instance of time."
1123,Can a vector contain heterogenous objects?,Yes a Vector can contain heterogenous objects. Because a Vector stores everything in terms of Object
1124,What is an enumeration?,An enumeration is an interface containing methods for accessing the underlying data structure from which the enumeration is obtained. It allows sequential access to all the elements stored in the collection.
1125,What is difference between Path and Classpath?,Path and Classpath are operating system level environment variales. Path is defines where the system can find the executables(.exe) files and classpath is used to specify the location of .class files.
1126,Can a class declared as private be accessed outside it's package?,"No, it's not possible to accessed outside it's package."
1127,What are the restriction imposed on a static method or a static block of code?,"A static method should not refer to instance variables without creating an instance and cannot use ""this"" operator to refer the instance."
1128,Can an Interface extend another Interface?,"Yes an Interface can inherit another Interface, for that matter an Interface can extend more than one Interface."
1129,Which object oriented Concept is achieved by using overloading and overriding?,Polymorphism
1130,What is an object's lock and which object's have locks?,An object's lock is a mechanism that is used by multiple threads to obtain synchronized access to the object. A thread may execute a synchronized method of an object only after it has acquired the object's lock.
1131,What is Downcasting?,"It is the casting from a general to a more specific type, i.e. casting down the hierarchy."
1132,What are order of precedence and associativity and how are they used?,Order of precedence determines the order in which operators are evaluated in expressions. Associatity determines whether an expression is evaluated left-to-right or right-to-left.
1133,"If a method is declared as protected, where may the method be accessed?",A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.
1134,What is the difference between inner class and nested class?,"When a class is defined within a scope of another class, then it becomes inner class. If the access modifier of the inner class is static, then it becomes nested class."
1135,What restrictions are placed on method overriding?,"Overridden methods must have the same name, argument list, and return type. The overriding method may not limit the access of the method it overrides."
1136,What is constructor chaining and how is it achieved in Java?,A child object constructor always first needs to construct its parent. In Java it is done via an implicit call to the no-args constructor as the first statement.
1137,Can a double value be cast to a byte?,"Yes, a double value can be cast to a byte."
1138,How does a try statement determine which catch clause should be used to handle an exception?,"When an exception is thrown within the body of a try statement, the catch clauses of the try statement are examined in the order in which they appear. The first catch clause that is capable of handling the exception is executed. The remaining catch clauses are ignored."
1139,What will be the default values of all the elements of an array defined as an instance variable?,"If the array is an array of primitive types, then all the elements of the array will be initialized to the default value corresponding to that primitive type."
1140,Why Ubuntu Is Safe And Not Affected By Viruses?," It does not support malicious e-mails and contents, and before any e-mail is opened by users it will go through many security checks
    Ubuntu uses Linux , which is a super secure O.S system
    Unlike other O.S, countless Linux users can see the code at any time and can fix the problem if there is any
    Generally, Malwares and viruses are coded to take advantage of weakness in Windows
"
1141,What Is Unity In Ubuntu ? How Can You Add New Entries To The Launcher?,"In Ubuntu, Unity is the default windows manager.  On left side of the Ubuntu it introduces the launcher and Dash to start programs.
    In order to add new entries to the launcher you can create a file name like .desktop and  then drag file on the launcher.
"
1142,Whether Your Video Card Can Run Unity How Would You Know?,"When you use command /usr/lib/nux/unity_support_test-p it will give detailed output about Unitys requirements and  if they are met, then your video card can run unity."
1143,How To Enable Root Login In Ubuntu?,"he command which enables root login is
#sudo sh-c echo greater-show-manual-login=true >>/etc/lightdm/lightdm.conf."
1144,How To Enable Startup Sound In Ubuntu?,"To enable startup sound in Ubuntu:

    Click control gear and then click on Startup Applications
    In the Startup Application Preferences window, click Add to add an entry
    Then fill the information in comment box like Name, Command and Comment
    /usr/bin/canberra-gtk-playid= desktop-logindescription= play login sound
    Logout and then login once you are done
"
1145,How You Can Reset Unity Configuration?,To reset the unity configuration the simplest way to do is to hit open a Terminal or hit Alt-F2  and run the command # unity reset.
1146,How To Access Terminal?,"To access terminal , you have to go under Application Menu -> Accessories -> Terminal .
You can also open it with shortcut key Ctrl+Alt+T."
1147,How You Can Create A Folder In Ubuntu Using Terminal?,"To create a folder in Ubuntu, you have to use command mkdir.  It will be something like these :  ~$ mkdir Ubuntu_rules."
1148,How You Can View The Text File In Ubuntu Using Terminal?,"To view the text file in Ubuntu, go to the specific folder where the text files are located by using the command cd and then type less filename.txt."
1149,How To Enable Curl On Ubuntu Lamp Stack?,"To enable curl on Ubuntu , first install libcurl, once done use following command sudo/etc/init .d /apache2 restart or sudo service apache2 restart."
1150,How You Can Find A File In Ubuntu Using Terminal?,"To find a file in Ubuntu you have to use command,

    find .
    name process.txt .  
    It will look for the current directory for a file called process.txt.
"
1151,What Is The Quicker Way To Open An Ubuntu Terminal In A Particular Directory?,"To open Ubuntu terminal in a particular directory you can use custom keyboard short cut. To do that, in the command field of a new custom keyboard , type gnome  terminal   working  directory = /path/to/dir."
1152,What Is The Meaning Of export Command In Ubuntu?,"Export is a command in Bash shell language, when you try to set a variable, it is visible or exported to any subprocess started from that instance of bash.  The variable will not exist in the sub-process without the export command."
1153,How To Uninstall The Libraries In Ubuntu?,"To uninstall the libraries in Ubuntu, you can use command sudo apt  get remove library_name"
1154,How You Can Run An Ubuntu Program In The Background Simultaneously When You Start Your Ubuntu Server?,By using nohup.  It will stop the process receiving the NOHUP signal and thus terminating it you log out of the program which was invoked with.  & runs the process in the background.
1155,How You Can Get The Current Color Of The Current Screen On The Ubuntu Desktop?,You can open the background image in The Gimp (image editor) and then use the dropper tool to select the color on the specific point. It gives you the RGB value of the color at that point.
1156,What Is The Purpose Of Using Libaio Package In Ubuntu?,"Libaio is Linux Kernel Asynchronous I/O (A/O).  A/O allows even a single application thread to overlap I/O operations with other processing, by providing an interface for submitting one or more I/O requests in one system call without waiting for completion.  And a separate interface to reap completed I/O operations associated with a given completion group."
1157,How You Create Launchers On Desktop In Ubuntu?,"To create launchers on desktop in Ubuntu you can use

ALT+F2 then type  gnome-desktop-item-edit create-new~/desktop ,  it will launch the old GUI dialog and create a launcher on your desktop."
1158,How To Color The Git Console In Ubuntu?,"To color the Git console in Ubuntu you can use the command git configglobal color.ui auto.  In the command, the color.ui variable sets the default value for variable such as color.diff and color.grep."
1159,How You Can Append One File To Another In Ubuntu Linux?,To append one file to another in Ubuntu Linux you can use command cat file2 >> file 1.  The operator >> appends the output of the named file or creates the file if it is not created.  While another command cat file 1 file 2 > file 3 appends two or more files to one.
1160,What Is The Use Of Behavior Tab In Ubuntu?,"Through behaviours tab you can make many changes on the appearance of desktop

Auto hide the launcher : You can use this option to reveal the launcher when moving the pointer to the defined hot spot.

Enable workspaces:  By checking this option you can enable workspace.

Add show desktop icon to the launcher: This option is used to display the desktop icon on the launcher."
1161,What Is The Command To Calculate The Size Of A Folder?,To calculate the size of a folder use the command du sh folder1.
1162, What Is A Folder In Ubuntu ?,There is no concept of Folder in Ubuntu. Everything including your hardware is a FILE.
1163,How Can You Find Status Of A Process Using Ubuntu?,Use the command ps ux
1164,How Can You Check The Memory Status?,"You can use the command:

    free -m  to display output in MB
    free -g  to display output in GB
"
1165,What Components Have Been Released By Ubuntu For Their For Their Cloud Strategy?,"Ubuntu till date has released three components, they are named as :

    Ubuntu Server Edition on Amazon EC2 (IaaS)
    Ubuntu enterprise cloud powered by Eucalyptus (IaaS)
    UbuntuOne(SaaS) The first two components are targeted for the infrastructure layer of the computer stack. And UbuntuOne is meant for the software layer also known as Software as a service (SaaS). 
"
1166,List Out A Few Of The Uses Of The Private Cloud Concept:,"The private cloud concept has a variety of usage scenarios. Some of them are :

    It enables an organization to rapidly develop and also prototype cloudware applications. Also this can be done behind a firewall enabling the creation/development of privacy sensitive applications such as classified data handling.
    Being an elastic platform it enables the use of high performance applications whose load can be fluctuating. The system is based on aggregated peak loads of different applications at a single point of time.
    By using private cloud concept the organization can assign a pool of hardware inside the firewall henceforth enabling it to be assigned to the users by a common gui to speed up the process.
"
1167,What Does Private Cloud Offer In Building An Infrastructure?,"Private cloud offers complete set of development tools and easy to configure panel where you can customize and deploy prototype applications. 

    It keeps the private sensitive application separate and hidden from the world.
    It provides the provision to create high performance applications and include the concept of elasticity. 
    It uses a firewall and keeps all the resources in a pool that separates them with other resources that are made public.
"
1168,What Are Elements Included In Ubuntu Cloud Architecture?,"The elements that are included in ubuntu cloud architecture are:

Cloud controller: it is the main controller that controls the communication between two nodes and allows the system to communicate with each other.

Walrus Storage controller: It controls the storage of the data and resource at one place for easy access.

Elastic block storage controller: it uses the elasticity concept and allow the resources to scale up as the demand rises. This block consists of dynamic resources. 

Cluster controller: it controls the cloud clusters which are made up of mady nodes and contains the configuration of all the nodes from a single point.

Node controller: it consists of the hardware resources that is being provided to the web or to the user through cluster controller."
1169,What Is The Function Of Walrus Storage Controller?,"Walrus storage controller uses SOAP API that are compatible with its architecture. 

Its main function is:

    To store the machine images that can be used by the cloud controller
    To access and store the data from anywhere. 
    It provides file level storage system and doesnt provide the locking of a file. It doesnt allow concurrent file to change the status of a single file that is getting modified by the user. 
    It saves the state of the images.
"
1170,What Are The Tasks Performed By Node Controller?,"Node controller consists of the hardware settings and configuration for the image machines. It performs the tasks that are requested by cluster controller and reply to the queries. 

It performs the following tasks:

1. Verify and authenticate the user request.
2. Allow user to download the image from the cache and use it.
3. Create a virtual network interface for easy communication between machines.
4. Start an instance of a virtual machine that can be accessed by the user."
1171,What Was The Requirement Of The Initial Addition Of Node Controller?,"The initial addition of Node Controller required a password to exchange the cryptographic keys from the lower controller to the upper one. After the password is exchanged, all operations rely on the trust provided by these keys in the communications between the controllers."
1172,How Does Networking Play An Important Role In Security?,"To prevent eavesdropping on network traffic from a machine run by one user to the machines run by other users, networking plays an important role in security.

Following networking modes are available at set-up time, depending on the level of security:

    SYSTEM Mode
    STATIC Mode
    MANAGED Mode
    MANAGED-NOVLAN Mode
"
1173,What Are The Different Types Of Actors Involved In Authentication And Authorization?,"There are two types of actors that are required for authentication and authorization:

    User or administrator of the system who has the rights to start and stop the instances of the system.
    Components of the systems that are required to be present to fully utilize the requests.
    The authentication on ubuntu cloud is being performed by X509 certificate that consists of cryptographic keys for authentication and secure communications between all the actors.
"
1174,What Are The Steps Involved In Authenticating And Authorizing The User?,"To authenticate and authorize the user there are two steps involved:

1. User should have access to the cloud controller account and access to its user interface.
2. Administrative rights to the user to create their own policies. 

The registered users get a access key that gives the certificate and the query information to the user which can be used to authorize the users status. 

The authentication will vary for each user to access the cloud and its service. To authenticate the user a password will be given to access the web console and retrieve their certificate and query key. Cloud controller verifies the authentication only at the first time but the authorization is verified at each level."
1175,What Are The Three Levels Of Machine Instance Isolation?,"The three levels that are included in instance isolation:

Networking isolation: it keeps the overall security of the ubuntu cloud system and keeps the network isolated from the user sight so that there will be less security issues. 

OS isolation: it keeps the user away from the operating system changes. It provides Mandatory Access control (MAC) system that includes default scripts to provide the isolation from the user to the Operating system.

Hypervisor based machine isolation: it doesnt allow the user to know what kind of hypervisor is used to provide the services which users have asked for. It provides intrinsic properties to hide its existence from the users of the cloud."
1176,What Are The Features Included In Ubuntu Enterprise Cloud?,"Ubuntu enterprise cloud includes many features that are not being provided with the other cloud platforms:

    It is EC2 compatible cloud platform that is built on ubuntu server.
    It provides complete built in cloud solution to manage the on-demand functionality.
    It provides the features of on-demand access and increases the EC2 functionality.
    It provides privacy policies and isolation from the hardware devices.
    It provides an easy way to scale the public providers and avoid lock-in whenever possible.
"
1177,How To Identify Ethernet Interfaces In Ubuntu Cloud?,"Ethernet interfaces are the part of the networking and it is automatically identified by the system using different naming conventions. It is represented by ethX, where X= any numeric value. The default interface of the system is named as eth0 and it will go on after this.

To identify the Ethernet interface the command that is used:

ifconfig -a | grep eth
eth0
Link encap:Ethernet

HWaddr 00:15:c5:4a:16:5aThe command will show all the interfaces that are associated with the system."
1178,. What Are The Limitations/demerits Of Ubuntu Cloud?,"Cloud computing has a few disadvantages, some of them are:

Security and privacy: The data in ubuntu cloud have many instances with a third party which many users may not prefer. Cloud servers store sensitive information which must be protected at all costs. There is a vulnerability of unauthorized access.

Loss of control (dependency): In cloud computing the cloud service providers play a major role more maintenance and fixing of the cloud. Being a third party an organization has less control over it. And once a cloud is established migrating to another CSP is not an easy task.

Costs: Although in the long run cloud computing is cheap but being a new technology the improvements and research involved makes it quite expensive. To incorporate this technology many changes may be require including the development of software.

Integration and knowledge: As most of the functions are provided by a CSP getting to understand the system from an organizational point of view is tough. Also integration with existing systems is hard to achieve."
1179,How Ip Addressing Is Managed In Ubuntu Cloud?,"The IP addressing is an essential part of networking and to establish an ubuntu cloud it has to be configured correctly and the default gateway has to be mentioned for communication with other network or same network. To configure the IP addressing the command that can be used is ip, ifconfig and route. These are the commands that allow the configuration of the networking. 

To set the configuration use the following command:

sudo ifconfig eth0 10.0.0.100 netmask 255.255.255.0

Through this IP address can be set and configured temporarily to save it permanently ifconfig file has to be modified."
1180, What Is Aws?,"AWS (Amazon Web Services) is a platform to provide secure cloud services, database storage, offerings to compute power, content delivery, and other services to help business level and develop."
1181,What Are The Key Components Of Aws?,"The fundamental elements of AWS are:

Route 53: A DNS web service

Easy E-mail Service: It permits addressing e-mail utilizing RESTFUL API request or through normal SMTP

Identity and Access Management: It gives heightened protection and identity control for your AWS account

Simple Storage Device or (S3): It is warehouse equipment and the well-known widely utilized AWS service

Elastic Compute Cloud (EC2): It affords on-demand computing sources for hosting purposes. It is extremely valuable in trouble of variable workloads

Elastic Block Store (EBS): It presents persistent storage masses that connect to EC2 to enable you to endure data beyond the lifespan of a particular EC2

Cloud Watch: To observe AWS sources, It permits managers to inspect and obtain key Additionally, one can produce a notification alert in the state of crisis."
1182,What Is The Importance Of Buffer In Amazon Web Services?,An Elastic Load Balancer ensures that the incoming traffic is distributed optimally across various AWS instances.  A buffer will synchronize different components and makes the arrangement additional elastic to a burst of load or traffic. The components are prone to work in an unstable way of receiving and processing the requests. The buffer creates the equilibrium linking various apparatus and crafts them effort at the identical rate to supply more rapid services.
1183, What Is The Way To Secure Data For Carrying In The Cloud?,One thing must be ensured that no one should seize the information in the cloud while data is moving from point one to another and also there should not be any leakage with the security key from several storerooms in the cloud. Segregation of information from additional companies information and then encrypting it by means of approved methods is one of the options.
1184, Name The Several Layers Of Cloud Computing?,"Here is the list of layers of the cloud computing

    PaaS  Platform as a Service
    IaaS  Infrastructure as a Service
    SaaS  Software as a Service
"
1185,Explain Can You Vertically Scale An Amazon Instance ? How?,"Surely, you can vertically estimate on Amazon instance. During that

    Twist up a fresh massive instance than the one you are currently governing
    Delay that instance and separate the source webs mass of server and dispatch
    Next, quit your existing instance and separate its source quantity
    Note the different machine ID and connect that source mass to your fresh server
    Also, begin it repeatedly Study AWS Training Online From Real Time Experts
"
1186,What Are The Components Involved In Amazon Web Services?,"There are 4 components involved and are as below. Amazon S3: with this, one can retrieve the key information which are occupied in creating cloud structural design and amount of produced information also can be stored in this component that is the consequence of the key specified. Amazon EC2 instance: helpful to run a large distributed system on the Hadoop cluster. Automatic parallelization and job scheduling can be achieved by this component.

Amazon SQS: this component acts as a mediator between different controllers. Also worn for cushioning requirements those are obtained by the manager of Amazon.

Amazon SimpleDB: helps in storing the transitional position log and the errands executed by the consumers."
1187,What Is Lambda@edge In Aws?,"
    In AWS, we can use Lambda@Edge utility to solve the problem of low network latency for end users.
    In Lambda@Edge there is no need to provision or manage servers. We can just upload our Node.js code to AWS Lambda and create functions that will be triggered on CloudFront requests.
    When a request for content is received by CloudFront edge location, the Lambda code is ready to execute.
    This is a very good option for scaling up the operations in CloudFront without managing servers.
"
1188,Distinguish Between Scalability And Flexibility?,"The aptitude of any scheme to enhance the tasks on hand on its present hardware resources to grip inconsistency in command is known as scalability. The capability of a scheme to augment the tasks on hand on its present and supplementary hardware property is recognized as flexibility, hence enabling the industry to convene command devoid of putting in the infrastructure at all.  AWS has several configuration management solutions for AWS scalability, flexibility, availability and management."
1189,Name The Various Layers Of The Cloud Architecture?,"There are 5 layers and are listed below

    CC- Cluster Controller
    SC- Storage Controller
    CLC- Cloud Controller
    Walrus
    NC- Node Controller
"
1190,What Are The Different Types Of Events Triggered By Amazon Cloud Front?,"Different types of events triggered by Amazon CloudFront are as follows:

Viewer Request: When an end user or a client program makes an HTTP/HTTPS request to CloudFront, this event is triggered at the Edge Location closer to the end user.

Viewer Response: When a CloudFront server is ready to respond to a request, this event is triggered.

Origin Request: When CloudFront server does not have the requested object in its cache, the request is forwarded to Origin server. At this time this event is triggered.

Origin Response: When CloudFront server at an Edge location receives the response from Origin server, this event is triggered."
1191,Which Automation Gears Can Help With Spinup Services?,"The API tools can be used for spinup services and also for the written scripts. Those scripts could be coded in Perl, bash or other languages of your preference. There is one more option that is patterned administration and stipulating tools such as a dummy or improved descendant. A tool called Scalr can also be used and finally we can go with a controlled explanation like a Rightscale."
1192,What Is An Ami ? How Do I Build One?,"AMI holds for Amazon Machine Image. It is efficiently a snap of the source filesystem. Products appliance servers have a bio that shows the master drive report of the initial slice on a disk. A disk form though can lie anyplace physically on a disc, so Linux can boot from an absolute position on the EBS warehouse interface.

Create a unique AMI at beginning rotating up and instance from a granted AMI. Later uniting combinations and components as needed. Comprise wary of setting delicate data over an AMI (learn salesforce online). For instance, your way credentials should be joined to an instance later spinup. Among a database, mount an external volume that carries your MySQL data next spinup actually enough"
1193,What Are The Main Features Of Amazon Cloud Front?,Some of the main features of Amazon CloudFront are as follows: Device Detection Protocol Detection Geo Targeting Cache Behavior Cross Origin Resource Sharing Multiple Origin Servers HTTP Cookies Query String Parameters Custom SSL.
1194,What Is The Relation Between An Instance And Ami?,"AMI can be elaborated as Amazon Machine Image, basically, a template consisting software configuration part. For example an OS, applications, application server. If you start an instance, a duplicate of the AMI in a row as an unspoken attendant in the cloud."
1195,What Is Amazon Ec2 Service?,Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable (scalable) computing capacity in the cloud. You can use Amazon EC2 to launch as many virtual servers you need. In Amazon EC2 you can configure security and networking as well as manage storage.Amazon EC2 service also helps in obtaining and configuring capacity using minimal friction.
1196,What Are The Features Of The Amazon Ec2 Service?,"As the Amazon EC2 service is a cloud service so it has all the cloud features. Amazon EC2 provides the following features:

    Virtual computing environment (known as instances)
    Pre-configured templates for your instances (known as Amazon Machine Images  AMIs)
    Amazon Machine Images (AMIs) is a complete package that you need for your server (including the operating system and additional software)
    Amazon EC2 provides various configurations of CPU, memory, storage and networking capacity for your instances (known as instance type)
    Secure login information for your instances using key pairs (AWS stores the public key and you can store the private key in a secure place)
    Storage volumes of temporary data is deleted when you stop or terminate your instance (known as instance store volumes)
    Amazon EC2 provides persistent storage volumes (using Amazon Elastic Block Store  EBS)
    A firewall that enables you to specify the protocols, ports, and source IP ranges that can reach your instances using security groups
    Static IP addresses for dynamic cloud computing (known as Elastic IP address)
    Amazon EC2 provides metadata (known as tags)
    Amazon EC2 provides virtual networks that are logically isolated from the rest of the AWS cloud, and that you can optionally connect to your own network (known as virtual private clouds  VPCs)
"
1197,What Is Amazon Machine Image And What Is The Relation Between Instance And Ami?,"Amazon Web Services provides several ways to access Amazon EC2, like web-based interface, AWS Command Line Interface (CLI) and Amazon Tools for Windows Powershell. First, you need to sign up for an AWS account and you can access Amazon EC2.

Amazon EC2 provides a Query API. These requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query parameter named Action."
1198,What Is Amazon Machine Image (ami)?,"An Amazon Machine Image (AMI) is a template that contains a software configuration (for example, an operating system, an application server, and applications). From an AMI, we launch an instance, which is a copy of the AMI running as a virtual server in the cloud. We can even launch multiple instances of an AMI."
1199,What Is The Relation Between Instance And Ami?,"We can launch different types of instances from a single AMI. An instance type essentially determines the hardware of the host computer used for your instance. Each instance type offers different compute and memory capabilities.

After we launch an instance, it looks like a traditional host, and we can interact with it as we would do with any computer. We have complete control of our instances; we can use sudo to run commands that require root privileges."
1200, Explain Storage For Amazon Ec2 Instance.?,"Amazon EC2 provides many data storage options for your instances. Each option has a unique combination of performance and durability. These storages can be used independently or in combination to suit your requirements. There are mainly four types of storages provided by AWS:

Amazon EBS: Its durable, block-level storage volumes  can attached in running Amazon EC2 instance. The Amazon EBS volume persists independently from the running life of an Amazon EC2 instance. After an EBS volume is attached to an instance, you can use it like any other physical hard drive. Amazon EBS encryption feature supports encryption feature.

Amazon EC2 Instance Store: Storage disk that is attached to the host computer is referred to as instance store. The instance storage provides temporary block-level storage for Amazon EC2 instances. The data on an instance store volume persists only during the life of the associated Amazon EC2 instance; if you stop or terminate an instance, any data on instance store volumes is lost.

Amazon S3: Amazon S3 provides access to reliable and inexpensive data storage infrastructure. It is designed to make web-scale computing easier by enabling you to store and retrieve any amount of data, at any time, from within Amazon EC2 or anywhere on the web.

Adding Storage: Every time you launch an instance from an AMI, a root storage device is created for that instance. The root storage device contains all the information necessary to boot the instance. You can specify storage volumes in addition to the root device volume when you create an AMI or launch an instance using block device mapping."
1201,What Are The Security Best Practices For Amazon Ec2?,"There are several best practices for secure Amazon EC2. Following are few of them.

    Use AWS Identity and Access Management (AM) to control access to your AWS resources.
    Restrict access by only allowing trusted hosts or networks to access ports on your instance.
    Review the rules in your security groups regularly, and ensure that you apply the principle of least
    Privilege  only open up permissions that you require.
    Disable password-based logins for instances launched from your AMI. Passwords can be found or cracked, and are a security risk.
"
1202,"Explain Stopping, Starting, And Terminating An Amazon Ec2 Instance?","Stopping and Starting an instance: When an instance is stopped, the instance performs a normal shutdown and then transitions to a stopped state. All of its Amazon EBS volumes remain attached, and you can start the instance again at a later time. You are not charged for additional instance hours while the instance is in a stopped state.

Terminating an instance: When an instance is terminated, the instance performs a normal shutdown, then the attached Amazon EBS volumes are deleted unless the volumes deleteOnTermination attribute is set to false. The instance itself is also deleted, and you cant start the instance again at a later time."
1203,Explain Elastic Block Storage? What Type Of Performance Can You Expect? How Do You Back It Up? How Do You Improve Performance?,"EBS is a virtualized SAN or storage area network.  That means it is RAID storage to start with, so its redundant and fault tolerant.  If disks die in that RAID you dont lose data.  Great! It is also virtualized, so you can provision and allocate storage, and attach it to your server with various API calls. No calling the storage expert and asking him or her to run specialized commands from the hardware vendor.

Performance on EBS can exhibit variability.  That is, it can go above the SLA performance level, then drop below it.  The SLA provides you with an average disk I/O rate you can expect. This can frustrate some folks, especially performance experts who expect reliable and consistent disk throughout on a server.  Traditional physically hosted servers behave that way. Virtual AWS instances do not.

Backup EBS volumes by using the snapshot facility via API call or via a GUI interface like elasticfox.

Improve performance by using Linux software raid and striping across four volumes."
1204,What Is S3? What Is It Used For? Should Encryption Be Used?,"S3 stands for Simple Storage Service.  You can think of it like FTP storage, where you can move files to and from there, but not mount it like a filesystem.  AWS automatically puts your snapshots there, as well as AMIs there.  Encryption should be considered for sensitive data, as S3 is a proprietary technology developed by Amazon themselves, and as yet unproven vis-a-vis a security standpoint."
1205,What Is An Ami? How Do I Build One?,"AMI stands for Amazon Machine Image. It is effectively a snapshot of the root filesystem. Commodity hardware, servers have a bios that points the master boot record of the first block on a disk. A disk image, though can sit anywhere physically on a disk, so Linux can boot from an arbitrary location on the EBS storage network.

Build a new AMI by first spinning up and instance from a trusted AMI.Then adding packages and components as required. Be wary of putting sensitive data onto an AMI.  For instance, your access credentials should be added to an instance after spinup with a database, mount an outside volume that holds your MySQL data after spinup as well."
1206,Can I Vertically Scale An Amazon Instance? How?,"Yes.This is an incredible feature of AWS and cloud virtualization.  Spin up a new larger instance than the one you are currently running.  Pause that instance and detach the root ebs volume from this server and discard.  Then stop your live instance, detach its root volume.  Note down the unique device ID and attach that root volume to your new server. And then start it again.  Voila, you have scaled vertically in-place!!"
1207,What Is Auto-scaling? How Does It Work?,"Autoscaling is a feature of AWS which allows you to configure and automatically provision and spin up new instances without the need for your intervention.  

You do this by setting thresholds and metrics to monitor.  When those thresholds are crossed, a new instance of your choosing will be spun up, configured, and rolled into the load balancer pool. Voila, youve scaled horizontally without any operator intervention!"
1208,What Automation Tools Can I Use To Spin Up Servers?,"The most obvious way is to roll-your-own scripts, and use the AWS API tools.  Such scripts could be written in bash, Perl or another language or your choice.

The next option is to use a configuration management and provisioning tools like puppet or better its successor Opscode Chef.You might also look towards a tool like Scalr. Lastly, you can go with a managed solution such as Rightscale."
1209,What Is Configuration Management? Why Would I Want To Use It With Cloud Provisioning Of Resources?,"Configuration management has been around for a long time in web operations and systems administration.  Yet the cultural popularity of it has been limited.  Most systems administrators configure machines as software was developed before version control  that is manually making changes on servers.  Each server can then and usually is slightly different.  Troubleshooting though, is straightforward as you login to the box and operate on it directly.  Configuration management brings a large automation tool in the picture, managing servers like strings of a puppet.  This forces standardization, best practices, and reproducibility as all configs are versioned and managed.  It also introduces a new way of working which is the biggest hurdle to its adoption.

Enter the cloud, then configuration management becomes even more critical.Thats because virtual servers such as amazons EC2 instances are much less reliable than physical ones.You absolutely need a mechanism to rebuild them as-is at any moment.This pushes best practices like automation, reproducibility and disaster recovery into center stage."
1210,Explain How You Would Simulate Perimeter Security Using The Amazon Web Services Model?,"Traditional perimeter security that were already familiar with using firewalls and so forth is not supported in the Amazon EC2 world.  AWS supports security groups.One can create a security group for a jump box with ssh access  only port 22 open.From there a webserver group and database group are created.The webserver group allows 80 and 443 from the world, but port 22 *only* from the jump box group.Further the database group allows port 3306 from the webserver group and port 22 from the jump box group.Add any machines to the webserver group and they can all hit the database.  No one from the world can, and no one can directly ssh to any of your boxe."
1211,How To Use Amazon Sqs?,"Amazon SQS (Simple Queue Service) is a message passing mechanism that is used for communication between different connectors that are connected with each other. It also acts as a communicator between various components of Amazon. It keeps all the different functional components together. This functionality helps different components to be loosely coupled, and provide an architecture that is more failure resilient system."
1212,What is Linux?,"Linux is an operating system based on UNIX and was first introduced by Linus Torvalds. It is based on the Linux Kernel and can run on different hardware platforms manufactured by Intel, MIPS, HP, IBM, SPARC, and Motorola. Another popular element in Linux is its mascot, a penguin figure named Tux. "
1213,What is the difference between UNIX and LINUX?,"Unix originally began as a propriety operating system from Bell Laboratories, which later on spawned into different commercial versions. On the other hand, Linux is free, open source and intended as a non-propriety operating system for the masses. "
1214,What is BASH?,"BASH is short for Bourne Again SHell. It was written by Steve Bourne as a replacement to the original Bourne Shell (represented by /bin/sh). It combines all the features from the original version of Bourne Shell, plus additional functions to make it easier and more convenient to use. It has since been adapted as the default shell for most systems running Linux. "
1215,What is Linux Kernel?,The Linux Kernel is a low-level systems software whose main role is to manage hardware resources for the user. It is also used to provide an interface for user-level interaction. 
1216,What is LILO?,LILO is a boot loader for Linux. It is used mainly to load the Linux operating system into main memory so that it can begin its operations
1217,What is a swap space?,Swap space is a certain amount of space used by Linux to temporarily hold some programs that are running concurrently. This happens when RAM does not have enough memory to hold all programs that are executing. 
1218,What is the advantage of open source?,"Open source allows you to distribute your software, including source codes freely to anyone who is interested. People would then be able to add features and even debug and correct errors that are in the source code. They can even make it run better and then redistribute these enhanced source code freely again. This eventually benefits everyone in the community. "
1219,What are the basic components of Linux?,"Just like any other typical operating system, Linux has all of these components: kernel, shells and GUIs, system utilities, and an application program. What makes Linux advantageous over other operating system is that every aspect comes with additional features and all codes for these are downloadable for free. "
1220,Does it help for a Linux system to have multiple desktop environments installed?,"In general, one desktop environment, like KDE or Gnome, is good enough to operate without issues. It's all a matter of preference for the user, although the system allows switching from one environment to another. Some programs will work in one environment and not work on the other, so it could also be considered a factor in selecting which environment to use. "
1221,What is the basic difference between BASH and DOS?,"The key differences between the BASH and DOS console lie in 3 areas:

- BASH commands are case sensitive while DOS commands are not;

- Under BASH, / character is a directory separator and \ acts as an escape character. Under DOS, / serves as a command argument delimiter and \ is the directory separator

- DOS follows a convention in naming files, which is 8 character file name followed by a dot and 3 characters for the extension. BASH follows no such convention. "
1222,What is the importance of the GNU project?,"This so-called Free software movement allows several advantages, such as the freedom to run programs for any purpose and freedom to study and modify a program to your needs. It also allows you to redistribute copies of software to other people, as well as the freedom to improve software and have it released for the public. "
1223,Describe the root account.,"The root account is like a systems administrator account and allows you full control of the system. Here you can create and maintain user accounts, assigning different permissions for each account. It is the default account every time you install Linux. "
1224,What is CLI?,"CLI is short for Command Line Interface. This interface allows the user to type declarative commands to instruct the computer to perform operations. CLI offers greater flexibility. However, other users who are already accustomed to using GUI find it difficult to remember commands including attributes that come with it. "
1225,What is GUI?,"GUI, or Graphical User Interface, make use of images and icons that users click and manipulate as a way of communicating with the computer. Instead of having to remember and type commands, the use of graphical elements makes it easier to interact with the system, as well as adding more attraction through images, icons, and colors. "
1226,How do you open a command prompt when issuing a command?,"To open the default shell (which is where the command prompt can be found), press Ctrl-Alt-F1. This will provide a command line interface (CLI) from which you can run commands as needed."
1227,How can you find out how much memory Linux is using?,"From a command shell, use the ""concatenate"" command: cat /proc/meminfo for memory usage information. You should see a line starting something like Mem: 64655360, etc. This is the total memory Linux thinks it has available to use.

You can also use commands

free - m

vmstat

top

htop

to find current memory usage "
1228, What is a typical size for a swap partition under a Linux system?,"The preferred size for a swap partition is twice the amount of physical memory available on the system. If this is not possible, then the minimum size should be the same as the amount of memory installed."
1229,What are symbolic links?,"Symbolic links act similarly to shortcuts in Windows. Such links point to programs, files or directories. It also allows you instant access to it without having to go directly to the entire pathname. "
1230,Does the Ctrl+Alt+Del key combination work on Linux?,"Yes, it does. Just like Windows, you can use this key combination to perform a system restart. One difference is that you won't be getting any confirmation message and therefore, a reboot is immediate."
1231,How do you refer to the parallel port where devices such as printers are connected?,"Whereas under Windows you refer to the parallel port as the LPT port, under Linux you refer to it as /dev/lp . LPT1, LPT2 and LPT3 would therefore be referred to as /dev/lp0, /dev/lp1, or /dev/lp2 under Linux."
1232,Are drives such as hard drive and floppy drives represented with drive letters?,"No. In Linux, each drive and device have different designations. For example, floppy drives are referred to as /dev/fd0 and /dev/fd1. IDE/EIDE hard drives are referred to as /dev/hda, /dev/hdb, /dev/hdc, and so forth."
1233,How do you change permissions under Linux?,"Assuming you are the system administrator or the owner of a file or directory, you can grant permission using the chmod command. Use + symbol to add permission or  symbol to deny permission, along with any of the following letters: u (user), g (group), o (others), a (all), r (read), w (write) and x (execute). For example, the command chmod go+rw FILE1.TXT grants read and write access to the file FILE1.TXT, which is assigned to groups and others. "
1234,"In Linux, what names are assigned to the different serial ports?",Serial ports are identified as /dev/ttyS0 to /dev/ttyS7. These are the equivalent names of COM1 to COM8 in Windows. 
1235,How do you access partitions under Linux?,"Linux assigns numbers at the end of the drive identifier. For example, if the first IDE hard drive had three primary partitions, they would be named/numbered, /dev/hda1, /dev/hda2 and /dev/hda3. "
1236,What are hard links?,"Hard links point directly to the physical file on disk, and not on the pathname. This means that if you rename or move the original file, the link will not break since the link is for the file itself, not the path where the file is located. "
1237,What is the maximum length for a filename under Linux?,"Any filename can have a maximum of 255 characters. This limit does not include the path name, so therefore the entire pathname and filename could well exceed 255 characters. "
1238,What are filenames that are preceded by a dot?,"In general, filenames that are preceded by a dot are hidden files. These files can be configuration files that hold important data or setup info. Setting these files as hidden makes it less likely to be accidentally deleted."
1239,Explain virtual desktop.,"This serves as an alternative to minimizing and maximizing different windows on the current desktop. Using virtual desktops can clear the desktop when you can open one or more programs. Rather than minimizing/restoring all those programs as needed, you can simply shuffle between virtual desktops with programs intact in each one."
1240,How do you share a program across different virtual desktops under Linux?,"To share a program across different virtual desktops, in the upper left-hand corner of a program window look for an icon that looks like a pushpin. Pressing this button will ""pin"" that application in place, making it appear in all virtual desktops, in the same position onscreen"
1241,What does a nameless (empty) directory represent?,"This empty directory name serves as the nameless base of the Linux file system. This serves as an attachment for all other directories, files, drives, and devices. "
1242, What is the pwd command?,"The pwd command is short for print working directory command.

Example:

pwd"
1243,What are daemons?,"Daemons are services that provide several functions that may not be available under the base operating system. Its main task is to listen for service request and at the same time to act on these requests. After the service is done, it is then disconnected and waits for further requests"
1244,"How do you switch from one desktop environment to another, such as switching from KDE to Gnome?","Assuming you have these two environments installed, just log out from the graphical interface. Then at the login screen, type your login ID and password and choose which session type you wish to load. This choice will remain your default until you change it to something else. "
1245, What are the kinds of permissions under Linux?,There are 3 kinds of permissions under Linux:- Read: users may read the files or list the directory- Write: users may write to the file of new files to the directory- Execute: users may run the file or lookup a specific file within a directory 
1246,How does case sensitivity affect the way you use commands?,"When we talk about case sensitivity, commands are considered identical only if every character is encoded as is, including lowercase and uppercase letters. This means that CD, cd, and Cd are three different commands. Entering a command using uppercase letters, where it should be in lowercase, will produce different outputs. "
1247,What are environmental variables?,Environmental variables are global settings that control the shell's function as well as that of other Linux programs. Another common term for environmental variables is global shell variables. 
1248,What are the different modes when using vi editor?,There are 3 modes under vi:- Command mode  this is the mode where you start in- Edit mode  this is the mode that allows you to do text editing- Ex mode  this is the mode wherein you interact with vi with instructions to process a file 
1249,Is it possible to use shortcuts for a long pathname?,"Yes, there is. A feature known as filename expansion allows you do this using the TAB key. For example, if you have a path named /home/iceman/assignments directory, you would type as follows: /ho[tab]/ice[tab]/assi[tab] . This, however, assumes that the path is unique and that the shell you're using supports this feature. "
1250,What is redirection?,Redirection is the process of directing data from one output to another. It can also be used to direct an output as an input to another process
1251,What is grep command?,grep a search command that makes use of pattern-based searching. It makes use of options and parameters that are specified along with the command line and applies this pattern in searching the required file output. 
1252,What could be the problem when a command that was issued gave a different result from the last time it was used?,"One highly possible reason for getting different results from what seems to be the same command has something to do with case sensitivity issues. Since Linux is case sensitive, a command that was previously used might have been entered in a different format from the present one. For example, to lists all files in the directory, you should type the command ls, and not LS. Typing LS will either result in an error message if there is no program by that exact name exist or may produce a different output if there is a program named LS that performs another function. "
1253,What are the contents of /usr/local?,"It contains locally installed files. This directory matters in environments where files are stored on the network. Specifically, locally-installed files go to /usr/local/bin, /usr/local/lib, etc.). Another application of this directory is that it is used for software packages installed from source, or software not officially shipped with the distribution. "
1254,How do you terminate an ongoing process?,"Every process in the system is identified by a unique process id or pid. Use the kill command followed by the pid to terminate that process. To terminate all process at once, use kill 0. "
1255,How do you insert comments in the command line prompt?,"Comments are created by typing the # symbol before the actual comment text. This tells the shell to completely ignore what follows. For example ""# This is just a comment that the shell will ignore."" "
1256, What is command grouping and how does it work?,"You can use parentheses to group commands. For example, if you want to send the current date and time along with the contents of a file named OUTPUT to a second file named MYDATES, you can apply command grouping as follows: (date cat OUTPUT) > MYDATES "
1257,How do you execute more than one command or program from a single command line entry?,"You can combine several commands by separating each command or program using a semicolon symbol. For example, you can issue such a series of commands in a single entry:

ls l cd .. ls a MYWORK which is equivalent to 3 commands: ls -l cd.. ls -a MYWORK

**Note that this will be executed one after the other, in the order specified. "
1258,"Write a command that will look for files with an extension ""c"", and has the occurrence of the string ""apple"" in it. ","Find ./ -name ""*.c"" | xargs grep i ""apple"""
1259,What is the command to calculate the size of a folder?,To calculate the size of a folder uses the command du sh folder1.
1260,How can you find the status of a process?,"Use the command

ps ux "
1261,How can you check the memory status?,"You can use the command

free -m to display output in MB

free -g to display output in GB "
1262,Explain how to color the Git console?,"To color the Git console, you can use the command git configglobal color.ui auto. In the command, the color.ui variable sets the default value for a variable such as color.diff and color.grep."
1263,How can you append one file to another in Linux?,To append one file to another in Linux you can use command cat file2 >> file 1. The operator >> appends the output of the named file or creates the file if it is not created. While another command cat file 1 file 2 > file 3 appends two or more files to one
1264,Explain how you can find a file using Terminal?,"To find a file you have to use a command, find . name ""process.txt"" . It will look for the current directory for a file called process.txt. "
1265,Explain how you can create a folder using Terminal?,"To create a folder, you have to use command mkdir. It will be something like these: ~$ mkdir Guru99 "
1266,Explain how you can view the text file using Terminal?,"To view the text file, go to the specific folder where the text files are located by using the command cd and then type less filename.txt."
1267,Explain how to enable curl on Ubuntu LAMP stack?,"To enable curl on Ubuntu, first, install libcurl, once done use following command sudo/etc/init .d /apache2 restart or sudo service apache2 restart."
1268, Explain how to enable root logging in Ubuntu?,"The command which enables root logging is

#sudo sh-c 'echo ""greater-show-manual-login=true"" >>/etc/lightdm/lightdm.conf' "
1269,How can you run a Linux program in the background simultaneously when you start your Linux Server?,By using nohup. It will stop the process receiving the NOHUP signal and thus terminating it you log out of the program which was invoked with. & runs the process in the background. 
1270, About the pte Test,"To complete a PTE Academic test, you will need to attend a secure Pearson test center. You will use a computer and headset to listen to, read and respond to questions.

During the three-hour test session, there are three main parts to the test: speaking and writing (together), listening and reading. There is also an optional 10-minute break between the reading and listening parts. During the test, you will find twenty different question formats, ranging from multiple choice through to essay writing and interpreting information.

PTE Academic assesses real-life, academic English, so you will hear excerpts from lectures and view graphs and charts. You will hear a range of accents in the test, from British and American to non-native speakers, so you will be exposed to the type of accents you will encounter in everyday life."
1271,what is pte Test Format,"Part 1: Speaking & Writing
(77  93 minutes)

    Personal introduction
    Read aloud
    Repeat sentence
    Describe image
    Re-tell lecture
    Answer short question
    Summarize written text
    Essay (20 mins)

Learn more
Part 2: Reading
(32  40 minutes)

    Reading & writing: Fill in the blanks
    Multiple choice, choose multiple answers
    Re-order paragraphs
    Reading: Fill in the blanks
    Multiple choice, choose single answer

Learn more
Part 3: Listening
(45  57 minutes)

    Summarize spoken text
    Multiple choice, choose multiple answer
    Fill in the blanks
    Highlight correct summary
    Multiple choice, choose single answer
    Select missing word
    Highlight incorrect words
    Write from dictation"
1272,What is PTE?,"PTE Academic is a type of test especially conducted for the students who are non-natives. It will help the student to prepare himself or herself to cope up with the scenario of the universities. It is a complete computer-based examination. PTE Academic is endorsed by the Graduate Management Admission Council. Universities like London Business School (UK), Harvard Business School, Stanford Graduate School of Business, and Yale University in the United States accepts the PTE score for the admission in their university. Some of the other countries that accept PTE Academic are Spain, France and China. Apart from that, some other schools in France like INSEAD and HEC Paris and IESE, IE Business School and ESADE in Spain accepts PTE Academic.PTE General is also one type of PTE test examination. It was formerly known as the London Tests of English. The test is accredited by QCA, the Qualification and Curriculum Authority. It is a theme-based test designed for the speakers of English as a foreign language (EFL). Through this exam, ones communication skills are recognised and how quickly and easily a candidate remembers the vocabulary and other skills. For this, candidates have to appear in the reading, writing, listening and reading parts. PTE General is accepted by all universities and ministries of education in the world.

Good Luck !"
1273, what is  PTE Exam  Eligibility Conditions,"It is a language assessment exam which allows candidates of 16 years and above to test their English skills. The Pearson Test of English score is used by students and migrants to prove their proficiency in English for academic admissions into international universities/colleges, employment or visa purposes."
1274,PTE Exam Test Date,"The PTE exam is conducted round the year. So, the candidates who wish to take the PTE exam can schedule their test even 24 hours in advance. The PTE test is conducted at least 6 to 8 times a month throughout the year."
1275,PTE Exam Overview of PTE,"S.No.  Particulars  Details
1.  Eligibility criteria  Anyone of age 16 years and above
2.  Test date  Round the year
3.  Exam format  The exam format consists of 20 different questions which test Speaking & writing skills (77  93 minutes), Reading skills (32  41 minutes) and Listening skills (45  57 minutes)
4.  Registration  Register online through the official website of Pearson PTE Academic
5.  Test fee  Standard fee of PTE test  INR 13,300
6.  Result  Announcement of PTE result within 5 business days and the PTE score ranges between 10 to 90"
1276,Olcademy,"Olcademy is regarded as one of the best startups to intern with. Thanks to the work culture and keen support from the higher management in grooming the interns. A startup in technology, e-commerce, and e-learning space. We offer something for everyone, from high school students looking to enhance their academic profile to experienced practitioners who are seeking to focus on developing new skills, increase their knowledge base and keep up to date with developments within their particular areas of expertise."
1277,History of Olcademy,"Olcademy was founded by Mukul Verma. In November, 2017 while he was traveling across North Eastern India, he saw a tribal man doing something creative using a bamboo stick. He went on to make a chair and a decorative item from that stick. Other people who were also witnessing this, complimented the man on his meticulous efforts and went on their way. Interesting, from the crowd stepped out a foreign traveler who approached the man and offered him hundred rupees. The man took it with utter glee on his face and left the scene. Mukul had been observing all this, he was quite curious to know what had transpired between the foreigner and the tribal man. He posed the same question to the foreigner who went on to tell him that the man was a local tribal craftsman who had been showcasing his skill on demand of that foreigner. On further inquiries, the foreign traveler disclosed that he was a well-established craft seller, and chairs like this had a really good market value. He was learning how to make them so that he could sell such chairs and export them for a large amount of money. This was the case of a highly skilled person being underpaid. People with varied skillsets who can be differently valued are currently not able to generate the corresponding economic value. This shows that people with valuable skills from distant places do not have a proper platform which can increase their visibility throughout the globe and pass it on to upcoming generations. This triggered an idea to build, an interactive medium where capable individuals can share their skills with anyone across the globe and can earn a living from it."
